{"ast":null,"code":"import _objectSpread from\"/Users/BrienOShane93/Documents/GitHub/react-intro/hurleymaker-assignment2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/BrienOShane93/Documents/GitHub/react-intro/hurleymaker-assignment2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext}from\"react\";import{Grid,Form,Header,Segment,Button}from\"semantic-ui-react\";import ErrorModal from\"../../components/Feedback/ErrorModal/ErrorModal\";import AuthContext from\"../../context/auth-context\";import axios from'../../axios-orders';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Authenticate=function Authenticate(props){var auth=useContext(AuthContext);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isLoginMode=_useState2[0],setIsLoginMode=_useState2[1];var _useState3=useState({error:false,errorMessage:null}),_useState4=_slicedToArray(_useState3,2),errorState=_useState4[0],setErrorState=_useState4[1];var switchModeHandler=function switchModeHandler(){setIsLoginMode(function(prevMode){return!prevMode;});setAuthDetailsState({details:{name:\"\",email:\"\",password:\"\"}});setValidationState({rules:[{id:\"form-input-name\",message:\"Please enter your name (letters and spaces only, min length 2)\",required:true,valid:false},{id:\"form-input-email\",message:\"Please enter a valid email address (something@something.something)\",required:true,valid:false},{id:\"form-input-password\",message:\"Please enter a password (letters and numbers only, min length 6)\",required:true,valid:false}],formValid:false});document.getElementById(\"form\").reset();};var _useState5=useState({details:{name:\"\",email:\"\",password:\"\"}}),_useState6=_slicedToArray(_useState5,2),authDetailsState=_useState6[0],setAuthDetailsState=_useState6[1];var _useState7=useState({rules:[{id:\"form-input-name\",message:\"Please enter your name (letters and spaces only, min length 2)\",required:true,valid:false},{id:\"form-input-email\",message:\"Please enter a valid email address (something@something.something)\",required:true,valid:false},{id:\"form-input-password\",message:\"Please enter a password (letters and numbers only, min length 6)\",required:true,valid:false}],formValid:false}),_useState8=_slicedToArray(_useState7,2),validationState=_useState8[0],setValidationState=_useState8[1];var _useState9=useState({name:null,email:null,address:null}),_useState10=_slicedToArray(_useState9,2),messageState=_useState10[0],setMessageState=_useState10[1];var validate=function validate(value,inputIdentifier){// copy the validation state\nvar validation=_objectSpread({},validationState);// find the rule for this input\nvar inputRule=validation.rules.findIndex(function(input){return input.id===inputIdentifier;});var message=null;// check if it is required and also empty\nif(validation.rules[inputRule].required&&value.trim()===\"\"){// get the error message and set valid to false\nmessage=validation.rules[inputRule].message;validation.rules[inputRule].valid=false;}else if(inputIdentifier===\"form-input-email\"){//check for a valid email\nvar pattern=/^[^@\\s]+@[^@\\s]+\\.[^@\\s]+$/;var validEmail=pattern.test(value);if(validEmail){validation.rules[inputRule].valid=true;}else{validation.rules[inputRule].valid=false;message=validation.rules[inputRule].message;}}else if(inputIdentifier===\"form-input-password\"){//check for a valid password, letters and numbers only, 6 characters min\nvar _pattern=/^[A-Za-z0-9\\s]{6,}$/;var validPassword=_pattern.test(value);if(validPassword){validation.rules[inputRule].valid=true;}else{validation.rules[inputRule].valid=false;message=validation.rules[inputRule].message;}}else if(validation.rules[inputRule].required&&inputIdentifier===\"form-input-name\"){//check for a valid name (letters and spaces only)\nvar _pattern2=/^[A-Za-z\\s]{2,30}$/;var validName=_pattern2.test(value);if(validName){validation.rules[inputRule].valid=true;}else{validation.rules[inputRule].valid=false;message=validation.rules[inputRule].message;}}else{// otherwise reset the message and set valid back to true\nmessage=null;validation.rules[inputRule].valid=true;}var msgState=_objectSpread({},messageState);switch(inputIdentifier){case\"form-input-name\":msgState.name=message;break;case\"form-input-email\":msgState.email=message;break;case\"form-input-password\":msgState.password=message;break;default:// code block\n}setMessageState(_objectSpread({},msgState));// check if the whole form is valid\nvar formIsValid=true;for(var i in validation.rules){if(isLoginMode&&i==0){continue;}if(!validation.rules[i].valid){formIsValid=false;}}// update state\nsetValidationState({rules:validation.rules,formValid:formIsValid});};var formChangedHandler=function formChangedHandler(event,inputIdentifier){var authDetails=authDetailsState.details;switch(inputIdentifier){case\"form-input-name\":authDetails.name=event.target.value;validate(event.target.value,inputIdentifier);break;case\"form-input-email\":authDetails.email=event.target.value;validate(event.target.value,inputIdentifier);break;case\"form-input-password\":var password=event.target.value;var trimmedPassword=password.trim();authDetails.password=trimmedPassword;validate(trimmedPassword,inputIdentifier);break;default:// code block\n}setAuthDetailsState({details:authDetails});};var errorHandler=function errorHandler(){setErrorState({error:false,errorMessage:null});};var signupHandler=function signupHandler(){axios.post(\"/signup\",authDetailsState.details).then(function(response){auth.login(response.data.userId,response.data.token);props.history.push(\"/\");}).catch(function(error){var errorMsg=\"\";if(error.response){errorMsg=error.response.data.message;}else{errorMsg=\"Something went wrong - signup failed\";}setErrorState({error:true,errorMessage:errorMsg});});};var loginHandler=function loginHandler(){axios.post(\"/login\",authDetailsState.details).then(function(response){auth.login(response.data.userId,response.data.token);props.history.push(\"/\");}).catch(function(error){var errorMsg=\"\";if(error.response){errorMsg=error.response.data.message;}else{errorMsg=\"Something went wrong - login failed\";}setErrorState({error:true,errorMessage:errorMsg});});};var disabled=!validationState.formValid;var signupBtnColor=\"grey\";var loginBtnColor=\"grey\";var authForm=null;if(errorState.error){authForm=/*#__PURE__*/_jsx(ErrorModal,{error:errorState.errorMessage,onClear:errorHandler});}else{if(isLoginMode){authForm=/*#__PURE__*/_jsxs(Segment,{color:\"red\",children:[/*#__PURE__*/_jsx(Header,{as:\"h2\",textAlign:\"center\",color:\"red\",children:\"Already registered? Log In!\"}),/*#__PURE__*/_jsxs(Form,{id:\"form\",children:[/*#__PURE__*/_jsx(Form.Input,{error:messageState.email,autoComplete:\"off\",required:true,label:\"Email\",placeholder:\"Email e.g. username@mail.com\",id:\"form-input-email\",onChange:function onChange(event){return formChangedHandler(event,\"form-input-email\");}}),/*#__PURE__*/_jsx(Form.Input,{error:messageState.password,type:\"password\",autoComplete:\"off\",required:true,label:\"Password\",placeholder:\"Password\",id:\"form-input-password\",onChange:function onChange(event){return formChangedHandler(event,\"form-input-password\");}}),/*#__PURE__*/_jsx(Button,{type:\"submit\",color:\"green\",disabled:disabled,onClick:loginHandler,children:\"Log In\"})]})]});loginBtnColor=\"red\";}else{authForm=/*#__PURE__*/_jsxs(Segment,{color:\"red\",children:[/*#__PURE__*/_jsx(Header,{as:\"h2\",textAlign:\"center\",color:\"red\",children:\"First time here? Sign Up!\"}),/*#__PURE__*/_jsxs(Form,{id:\"form\",children:[/*#__PURE__*/_jsx(Form.Input,{error:messageState.email,autoComplete:\"off\",required:true,label:\"Email\",placeholder:\"Email e.g. username@mail.com\",id:\"form-input-email\",onChange:function onChange(event){return formChangedHandler(event,\"form-input-email\");}}),/*#__PURE__*/_jsx(Form.Input,{error:messageState.password,type:\"password\",autoComplete:\"off\",required:true,label:\"Password\",placeholder:\"Password\",id:\"form-input-password\",onChange:function onChange(event){return formChangedHandler(event,\"form-input-password\");}}),/*#__PURE__*/_jsx(Form.Input,{error:messageState.name,autoComplete:\"off\",required:true,label:\"Name\",placeholder:\"Name\",id:\"form-input-name\",onChange:function onChange(event){return formChangedHandler(event,\"form-input-name\");}}),/*#__PURE__*/_jsx(Button,{type:\"submit\",color:\"green\",disabled:disabled,onClick:signupHandler,children:\"Sign Up\"})]})]});signupBtnColor=\"red\";}}return/*#__PURE__*/_jsx(Grid,{children:/*#__PURE__*/_jsx(Grid.Row,{centered:true,children:/*#__PURE__*/_jsxs(Grid.Column,{width:10,children:[/*#__PURE__*/_jsxs(Button.Group,{widths:\"2\",children:[/*#__PURE__*/_jsx(Button,{size:\"large\",color:signupBtnColor,onClick:switchModeHandler,children:\"Sign Up\"}),/*#__PURE__*/_jsx(Button.Or,{}),/*#__PURE__*/_jsx(Button,{size:\"large\",color:loginBtnColor,onClick:switchModeHandler,children:\"Log In\"})]}),authForm]})})});};export default Authenticate;","map":{"version":3,"sources":["/Users/BrienOShane93/Documents/GitHub/react-intro/hurleymaker-assignment2/frontend/src/containers/Authenticate/Authenticate.js"],"names":["React","useState","useContext","Grid","Form","Header","Segment","Button","ErrorModal","AuthContext","axios","Authenticate","props","auth","isLoginMode","setIsLoginMode","error","errorMessage","errorState","setErrorState","switchModeHandler","prevMode","setAuthDetailsState","details","name","email","password","setValidationState","rules","id","message","required","valid","formValid","document","getElementById","reset","authDetailsState","validationState","address","messageState","setMessageState","validate","value","inputIdentifier","validation","inputRule","findIndex","input","trim","pattern","validEmail","test","validPassword","validName","msgState","formIsValid","i","formChangedHandler","event","authDetails","target","trimmedPassword","errorHandler","signupHandler","post","then","response","login","data","userId","token","history","push","catch","errorMsg","loginHandler","disabled","signupBtnColor","loginBtnColor","authForm"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport { Grid, Form, Header, Segment, Button } from \"semantic-ui-react\";\r\n\r\nimport ErrorModal from \"../../components/Feedback/ErrorModal/ErrorModal\";\r\nimport AuthContext from \"../../context/auth-context\";\r\nimport axios from '../../axios-orders';\r\n\r\nconst Authenticate = (props) => {\r\n\r\n  const auth = useContext(AuthContext);\r\n\r\n  const [isLoginMode, setIsLoginMode] = useState(false);\r\n\r\n  const [errorState, setErrorState] = useState({\r\n    error: false,\r\n    errorMessage: null,\r\n  });\r\n\r\n  const switchModeHandler = () => {\r\n    setIsLoginMode((prevMode) => !prevMode);\r\n    setAuthDetailsState({\r\n      details: {\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n      },\r\n    });\r\n    setValidationState({\r\n      rules: [\r\n        {\r\n          id: \"form-input-name\",\r\n          message:\r\n            \"Please enter your name (letters and spaces only, min length 2)\",\r\n          required: true,\r\n          valid: false,\r\n        },\r\n        {\r\n          id: \"form-input-email\",\r\n          message:\r\n            \"Please enter a valid email address (something@something.something)\",\r\n          required: true,\r\n          valid: false,\r\n        },\r\n        {\r\n          id: \"form-input-password\",\r\n          message:\r\n            \"Please enter a password (letters and numbers only, min length 6)\",\r\n          required: true,\r\n          valid: false,\r\n        },\r\n      ],\r\n      formValid: false,\r\n    });\r\n    document.getElementById(\"form\").reset();\r\n  };\r\n\r\n  const [authDetailsState, setAuthDetailsState] = useState({\r\n    details: {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n  });\r\n\r\n  const [validationState, setValidationState] = useState({\r\n    rules: [\r\n      {\r\n        id: \"form-input-name\",\r\n        message:\r\n          \"Please enter your name (letters and spaces only, min length 2)\",\r\n        required: true,\r\n        valid: false,\r\n      },\r\n      {\r\n        id: \"form-input-email\",\r\n        message:\r\n          \"Please enter a valid email address (something@something.something)\",\r\n        required: true,\r\n        valid: false,\r\n      },\r\n      {\r\n        id: \"form-input-password\",\r\n        message:\r\n          \"Please enter a password (letters and numbers only, min length 6)\",\r\n        required: true,\r\n        valid: false,\r\n      },\r\n    ],\r\n    formValid: false,\r\n  });\r\n\r\n  const [messageState, setMessageState] = useState({\r\n    name: null,\r\n    email: null,\r\n    address: null,\r\n  });\r\n\r\n  const validate = (value, inputIdentifier) => {\r\n    // copy the validation state\r\n    const validation = { ...validationState };\r\n\r\n    // find the rule for this input\r\n    const inputRule = validation.rules.findIndex(\r\n      (input) => input.id === inputIdentifier\r\n    );\r\n\r\n    let message = null;\r\n\r\n    // check if it is required and also empty\r\n    if (validation.rules[inputRule].required && value.trim() === \"\") {\r\n      // get the error message and set valid to false\r\n      message = validation.rules[inputRule].message;\r\n      validation.rules[inputRule].valid = false;\r\n    } else if (inputIdentifier === \"form-input-email\") {\r\n      //check for a valid email\r\n\r\n      let pattern = /^[^@\\s]+@[^@\\s]+\\.[^@\\s]+$/;\r\n      let validEmail = pattern.test(value);\r\n\r\n      if (validEmail) {\r\n        validation.rules[inputRule].valid = true;\r\n      } else {\r\n        validation.rules[inputRule].valid = false;\r\n        message = validation.rules[inputRule].message;\r\n      }\r\n    } else if (inputIdentifier === \"form-input-password\") {\r\n      //check for a valid password, letters and numbers only, 6 characters min\r\n\r\n      let pattern = /^[A-Za-z0-9\\s]{6,}$/;\r\n      let validPassword = pattern.test(value);\r\n\r\n      if (validPassword) {\r\n        validation.rules[inputRule].valid = true;\r\n      } else {\r\n        validation.rules[inputRule].valid = false;\r\n        message = validation.rules[inputRule].message;\r\n      }\r\n    } else if (\r\n      validation.rules[inputRule].required &&\r\n      inputIdentifier === \"form-input-name\"\r\n    ) {\r\n      //check for a valid name (letters and spaces only)\r\n\r\n      let pattern = /^[A-Za-z\\s]{2,30}$/;\r\n      let validName = pattern.test(value);\r\n\r\n      if (validName) {\r\n        validation.rules[inputRule].valid = true;\r\n      } else {\r\n        validation.rules[inputRule].valid = false;\r\n        message = validation.rules[inputRule].message;\r\n      }\r\n    } else {\r\n      // otherwise reset the message and set valid back to true\r\n      message = null;\r\n      validation.rules[inputRule].valid = true;\r\n    }\r\n\r\n    let msgState = { ...messageState };\r\n\r\n    switch (inputIdentifier) {\r\n      case \"form-input-name\":\r\n        msgState.name = message;\r\n        break;\r\n      case \"form-input-email\":\r\n        msgState.email = message;\r\n        break;\r\n      case \"form-input-password\":\r\n        msgState.password = message;\r\n        break;\r\n      default:\r\n      // code block\r\n    }\r\n\r\n    setMessageState({ ...msgState });\r\n\r\n    // check if the whole form is valid\r\n    let formIsValid = true;\r\n\r\n    for (let i in validation.rules) {\r\n      if (isLoginMode && i == 0) {\r\n        continue;\r\n      }\r\n\r\n      if (!validation.rules[i].valid) {\r\n        formIsValid = false;\r\n      }\r\n    }\r\n\r\n    // update state\r\n    setValidationState({ rules: validation.rules, formValid: formIsValid });\r\n  };\r\n\r\n  const formChangedHandler = (event, inputIdentifier) => {\r\n    let authDetails = authDetailsState.details;\r\n\r\n    switch (inputIdentifier) {\r\n      case \"form-input-name\":\r\n        authDetails.name = event.target.value;\r\n        validate(event.target.value, inputIdentifier);\r\n        break;\r\n      case \"form-input-email\":\r\n        authDetails.email = event.target.value;\r\n        validate(event.target.value, inputIdentifier);\r\n        break;\r\n      case \"form-input-password\":\r\n        let password = event.target.value;\r\n        let trimmedPassword = password.trim();\r\n        authDetails.password = trimmedPassword;\r\n        validate(trimmedPassword, inputIdentifier);\r\n        break;\r\n      default:\r\n      // code block\r\n    }\r\n\r\n    setAuthDetailsState({ details: authDetails });\r\n  };\r\n\r\n  const errorHandler = () => {\r\n    setErrorState({\r\n      error: false,\r\n      errorMessage: null,\r\n    });\r\n  };\r\n\r\n  const signupHandler = () => {\r\n    axios\r\n      .post(\"/signup\", authDetailsState.details)\r\n      .then((response) => {\r\n        auth.login(response.data.userId, response.data.token);\r\n        props.history.push(\"/\");\r\n      })\r\n      .catch((error) => {\r\n        let errorMsg = \"\";\r\n        if (error.response) {\r\n          errorMsg = error.response.data.message;\r\n        } else {\r\n          errorMsg = \"Something went wrong - signup failed\";\r\n        }\r\n        setErrorState({ error: true, errorMessage: errorMsg });\r\n      });\r\n  };\r\n\r\n  const loginHandler = () => {\r\n    axios\r\n      .post(\"/login\", authDetailsState.details)\r\n      .then((response) => {\r\n        auth.login(response.data.userId, response.data.token);\r\n        props.history.push(\"/\");\r\n      })\r\n      .catch((error) => {\r\n        let errorMsg = \"\";\r\n        if (error.response) {\r\n          errorMsg = error.response.data.message;\r\n        } else {\r\n          errorMsg = \"Something went wrong - login failed\";\r\n        }\r\n        setErrorState({ error: true, errorMessage: errorMsg });\r\n      });\r\n  };\r\n\r\n  let disabled = !validationState.formValid;\r\n\r\n  let signupBtnColor = \"grey\";\r\n  let loginBtnColor = \"grey\";\r\n\r\n  let authForm = null;\r\n\r\n  if (errorState.error) {\r\n    authForm = (\r\n      <ErrorModal error={errorState.errorMessage} onClear={errorHandler} />\r\n    );\r\n  } else {\r\n    if (isLoginMode) {\r\n      authForm = (\r\n        <Segment color=\"red\">\r\n          <Header as=\"h2\" textAlign=\"center\" color=\"red\">\r\n            Already registered? Log In!\r\n          </Header>\r\n          <Form id=\"form\">\r\n            <Form.Input\r\n              error={messageState.email}\r\n              autoComplete=\"off\"\r\n              required\r\n              label=\"Email\"\r\n              placeholder=\"Email e.g. username@mail.com\"\r\n              id=\"form-input-email\"\r\n              onChange={(event) =>\r\n                formChangedHandler(event, \"form-input-email\")\r\n              }\r\n            />\r\n            <Form.Input\r\n              error={messageState.password}\r\n              type=\"password\"\r\n              autoComplete=\"off\"\r\n              required\r\n              label=\"Password\"\r\n              placeholder=\"Password\"\r\n              id=\"form-input-password\"\r\n              onChange={(event) =>\r\n                formChangedHandler(event, \"form-input-password\")\r\n              }\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              color=\"green\"\r\n              disabled={disabled}\r\n              onClick={loginHandler}\r\n            >\r\n              Log In\r\n            </Button>\r\n          </Form>\r\n        </Segment>\r\n      );\r\n      loginBtnColor = \"red\";\r\n    } else {\r\n      authForm = (\r\n        <Segment color=\"red\">\r\n          <Header as=\"h2\" textAlign=\"center\" color=\"red\">\r\n            First time here? Sign Up!\r\n          </Header>\r\n          <Form id=\"form\">\r\n            <Form.Input\r\n              error={messageState.email}\r\n              autoComplete=\"off\"\r\n              required\r\n              label=\"Email\"\r\n              placeholder=\"Email e.g. username@mail.com\"\r\n              id=\"form-input-email\"\r\n              onChange={(event) =>\r\n                formChangedHandler(event, \"form-input-email\")\r\n              }\r\n            />\r\n            <Form.Input\r\n              error={messageState.password}\r\n              type=\"password\"\r\n              autoComplete=\"off\"\r\n              required\r\n              label=\"Password\"\r\n              placeholder=\"Password\"\r\n              id=\"form-input-password\"\r\n              onChange={(event) =>\r\n                formChangedHandler(event, \"form-input-password\")\r\n              }\r\n            />\r\n            <Form.Input\r\n              error={messageState.name}\r\n              autoComplete=\"off\"\r\n              required\r\n              label=\"Name\"\r\n              placeholder=\"Name\"\r\n              id=\"form-input-name\"\r\n              onChange={(event) => formChangedHandler(event, \"form-input-name\")}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              color=\"green\"\r\n              disabled={disabled}\r\n              onClick={signupHandler}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n          </Form>\r\n        </Segment>\r\n      );\r\n      signupBtnColor = \"red\";\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Row centered>\r\n        <Grid.Column width={10}>\r\n          <Button.Group widths=\"2\">\r\n            <Button\r\n              size=\"large\"\r\n              color={signupBtnColor}\r\n              onClick={switchModeHandler}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n            <Button.Or />\r\n            <Button\r\n              size=\"large\"\r\n              color={loginBtnColor}\r\n              onClick={switchModeHandler}\r\n            >\r\n              Log In\r\n            </Button>\r\n          </Button.Group>\r\n          {authForm}\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Authenticate;\r\n"]},"metadata":{},"sourceType":"module"}