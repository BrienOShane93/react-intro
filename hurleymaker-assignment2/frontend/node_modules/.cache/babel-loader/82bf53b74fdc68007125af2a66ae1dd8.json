{"ast":null,"code":"import _objectSpread from\"/Users/BrienOShane93/Documents/GitHub/react-intro/hurleymaker-assignment2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/BrienOShane93/Documents/GitHub/react-intro/hurleymaker-assignment2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext}from\"react\";import{Grid,Form,Header,Segment,Select,Button}from\"semantic-ui-react\";import{withRouter}from\"react-router-dom\";import{v4 as uuidv4}from\"uuid\";import axios from\"../../axios-orders\";import AuthContext from\"../../context/auth-context\";import OrderSummary from\"../../components/Order/Checkout/OrderSummary/OrderSummary\";import ErrorModal from\"../../components/Feedback/ErrorModal/ErrorModal\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PlaceOrder=function PlaceOrder(props){var auth=useContext(AuthContext);// CREATE STATES\nvar _useState=useState({totalPrice:props.location.state.order.totalPrice,chosenStyles:props.location.state.order.chosenStyles}),_useState2=_slicedToArray(_useState,2),orderState=_useState2[0],setOrderState=_useState2[1];var _useState3=useState({error:false,errorMessage:null}),_useState4=_slicedToArray(_useState3,2),errorState=_useState4[0],setErrorState=_useState4[1];var _useState5=useState({details:{name:\"\",phone:\"\",method:\"\",address:\"\"}}),_useState6=_slicedToArray(_useState5,2),customerState=_useState6[0],setCustomerState=_useState6[1];var _useState7=useState({rules:[{id:\"form-input-name\",message:\"Please enter your name (letters and spaces only, min length 2)\",required:true,valid:false},{id:\"form-input-phone\",message:\"Please enter your phone number (area code and number)\",required:true,valid:false},{id:\"form-input-method\",message:\"Please choose collection or delivery\",required:true,valid:false},{id:\"form-input-address\",message:\"Please enter your delivery address (house number and street)\",required:false,valid:true}],formValid:false}),_useState8=_slicedToArray(_useState7,2),validationState=_useState8[0],setValidationState=_useState8[1];var _useState9=useState({name:null,phone:null,method:null,address:null}),_useState10=_slicedToArray(_useState9,2),messageState=_useState10[0],setMessageState=_useState10[1];// CANCEL (GO BACK) HANDLER\nvar cancelHandler=function cancelHandler(){props.history.push({pathname:\"/\",state:{order:orderState}});};// VALIDATE FUNCTION\nvar validate=function validate(value,inputIdentifier,inputType){// copy the validation state\nvar validation=_objectSpread({},validationState);// find the rule for this input\nvar inputRule=validation.rules.findIndex(function(input){return input.id===inputIdentifier;});var message=null;// check if it is required and also empty (for inputs only)\nif(validation.rules[inputRule].required&&inputType===\"input\"&&value.trim()===\"\"){// get the error message and set valid to false\nmessage=validation.rules[inputRule].message;validation.rules[inputRule].valid=false;}else if(inputIdentifier===\"form-input-phone\"){//check for a valid phone number\nvar pattern=/^[+]?[(]?[0-9]{3,5}[)]?[-\\s.]?[0-9]{6,7}$/;var validNum=pattern.test(value);if(validNum){validation.rules[inputRule].valid=true;}else{validation.rules[inputRule].valid=false;message=validation.rules[inputRule].message;}}else if(inputIdentifier===\"form-input-name\"){//check for a valid name (letters and spaces only)\nvar _pattern=/^[A-Za-z\\s]{2,30}$/;var validName=_pattern.test(value);if(validName){validation.rules[inputRule].valid=true;}else{validation.rules[inputRule].valid=false;message=validation.rules[inputRule].message;}}else if(value===\"Delivery\"){//set address to required\nvalidation.rules[inputRule].valid=true;validation.rules[3].valid=false;validation.rules[3].required=true;}else if(value===\"Collection\"){//set address to not required\nvalidation.rules[inputRule].valid=true;validation.rules[3].required=false;validation.rules[3].valid=true;}else if(validation.rules[inputRule].required&&inputIdentifier===\"form-input-address\"){//check for a valid address (alphanumeric plus some special characters)\nvar _pattern2=/^[#.0-9a-zA-Z\\s,-]{2,50}$/;var validAddress=_pattern2.test(value);if(validAddress){validation.rules[inputRule].valid=true;}else{validation.rules[inputRule].valid=false;message=validation.rules[inputRule].message;}}else{// otherwise reset the message and set valid back to true\nmessage=null;validation.rules[inputRule].valid=true;}var msgState=_objectSpread({},messageState);switch(inputIdentifier){case\"form-input-name\":msgState.name=message;break;case\"form-input-phone\":msgState.phone=message;break;case\"form-input-method\":msgState.method=message;break;case\"form-input-address\":msgState.address=message;break;default:// code block\n}setMessageState(_objectSpread({},msgState));// check if the whole form is valid\nvar formIsValid=true;for(var i in validation.rules){if(!validation.rules[i].valid){formIsValid=false;}}// update state\nsetValidationState({rules:validation.rules,formValid:formIsValid});};// FORM CHANGED HANDLER\nvar formChangedHandler=function formChangedHandler(event,inputIdentifier,inputType){var customerDetails=customerState.details;switch(inputIdentifier){case\"form-input-name\":customerDetails.name=event.target.value;validate(event.target.value,inputIdentifier,inputType);break;case\"form-input-phone\":customerDetails.phone=event.target.value;validate(event.target.value,inputIdentifier,inputType);break;case\"form-input-method\":customerDetails.method=event.target.textContent;validate(event.target.textContent,inputIdentifier,inputType);break;case\"form-input-address\":customerDetails.address=event.target.value;validate(event.target.value,inputIdentifier,inputType);break;default:// code block\n}setCustomerState({details:customerDetails});};// DISABLE/ENABLE FORM SUBMIT BUTTON\nvar disabled=!validationState.formValid;// CHECKOUT HANDLER\nvar checkoutHandler=function checkoutHandler(){// get order from orderState\nvar order=orderState;// add unique id\norder.id=uuidv4();// create formatted date\nvar orderDate=new Date();var months=[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];var days=[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"];var dayNum=orderDate.getDay();var day=days[dayNum];var monthNum=orderDate.getMonth();var month=months[monthNum];var date=orderDate.getDate();var year=orderDate.getFullYear();// saves date in the format \"Fri 19 Mar 2021\"\nvar formattedDate=day+\" \"+date+\" \"+month+\" \"+year;// add formattedDate to order\norder.date=formattedDate;// add customer details to order\norder.details=customerState.details;order.userId=auth.userId;axios.post(\"/checkout\",order,{headers:{Authorization:\"Bearer \"+auth.token}}).then(function(response){props.history.push(\"/order-success\");}).catch(function(error){var errorMsg=\"\";if(error.response){errorMsg=error.response.data.message;}else{errorMsg=\"There was a problem creating your order\";}setErrorState({error:true,errorMessage:errorMsg});});};// ERROR HANDLER\nvar errorHandler=function errorHandler(){setErrorState({error:false,errorMessage:null});};// DISPLAY ERROR MODAL\nvar orderForm=null;if(errorState.error){orderForm=/*#__PURE__*/_jsx(ErrorModal,{error:errorState.errorMessage,onClear:errorHandler});}else{orderForm=/*#__PURE__*/_jsx(Grid,{children:/*#__PURE__*/_jsxs(Grid.Row,{columns:2,children:[/*#__PURE__*/_jsx(Grid.Column,{width:6,children:/*#__PURE__*/_jsxs(Segment,{color:\"red\",children:[/*#__PURE__*/_jsx(Header,{as:\"h2\",textAlign:\"center\",color:\"red\",children:\"Confirm your order:\"}),/*#__PURE__*/_jsx(OrderSummary,{menu:props.location.state.menu,toppings:props.location.state.order.chosenStyles,price:props.location.state.order.totalPrice}),/*#__PURE__*/_jsx(Button,{color:\"red\",onClick:cancelHandler,children:\"Go Back\"})]})}),/*#__PURE__*/_jsx(Grid.Column,{width:10,children:/*#__PURE__*/_jsxs(Segment,{color:\"red\",children:[/*#__PURE__*/_jsx(Header,{as:\"h2\",textAlign:\"center\",color:\"red\",children:\"Enter your details:\"}),/*#__PURE__*/_jsxs(Form,{id:\"form\",children:[/*#__PURE__*/_jsx(Form.Input,{error:messageState.name,required:true,label:\"Name\",placeholder:\"Name\",id:\"form-input-name\",onChange:function onChange(event){return formChangedHandler(event,\"form-input-name\",\"input\");}}),/*#__PURE__*/_jsx(Form.Input,{error:messageState.phone,required:true,label:\"Phone\",placeholder:\"Phone e.g. 086-1234567\",id:\"form-input-phone\",onChange:function onChange(event){return formChangedHandler(event,\"form-input-phone\",\"input\");}}),/*#__PURE__*/_jsx(Form.Field,{control:Select,required:true,error:messageState.method,label:\"Delivery method\",options:[{key:\"c\",text:\"Collection\",value:\"collection\"},{key:\"d\",text:\"Delivery\",value:\"delivery\"}],placeholder:\"Collection or Delivery\",id:\"form-input-method\",onChange:function onChange(event){return formChangedHandler(event,\"form-input-method\",\"select\");}}),/*#__PURE__*/_jsx(Form.Input,{error:messageState.address,required:validationState.rules[3].required,fluid:true,label:\"Address\",placeholder:\"Address\",id:\"form-input-address\",onChange:function onChange(event){return formChangedHandler(event,\"form-input-address\",\"input\");}}),/*#__PURE__*/_jsx(Button,{type:\"submit\",color:\"green\",disabled:disabled,onClick:checkoutHandler,children:\"Submit\"})]})]})})]})});}// DISPLAY ORDER SUMMARY AND FORM\nreturn/*#__PURE__*/_jsx(React.Fragment,{children:orderForm});};export default withRouter(PlaceOrder);","map":{"version":3,"sources":["/Users/BrienOShane93/Documents/GitHub/react-intro/hurleymaker-assignment2/frontend/src/containers/PlaceOrder/PlaceOrder.js"],"names":["React","useState","useContext","Grid","Form","Header","Segment","Select","Button","withRouter","v4","uuidv4","axios","AuthContext","OrderSummary","ErrorModal","PlaceOrder","props","auth","totalPrice","location","state","order","chosenStyles","orderState","setOrderState","error","errorMessage","errorState","setErrorState","details","name","phone","method","address","customerState","setCustomerState","rules","id","message","required","valid","formValid","validationState","setValidationState","messageState","setMessageState","cancelHandler","history","push","pathname","validate","value","inputIdentifier","inputType","validation","inputRule","findIndex","input","trim","pattern","validNum","test","validName","validAddress","msgState","formIsValid","i","formChangedHandler","event","customerDetails","target","textContent","disabled","checkoutHandler","orderDate","Date","months","days","dayNum","getDay","day","monthNum","getMonth","month","date","getDate","year","getFullYear","formattedDate","userId","post","headers","Authorization","token","then","response","catch","errorMsg","data","errorHandler","orderForm","menu","key","text"],"mappings":"iZAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,UAA1B,KAA4C,OAA5C,CACA,OAASC,IAAT,CAAeC,IAAf,CAAqBC,MAArB,CAA6BC,OAA7B,CAAsCC,MAAtC,CAA8CC,MAA9C,KAA4D,mBAA5D,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,OAASC,EAAE,GAAIC,CAAAA,MAAf,KAA6B,MAA7B,CACA,MAAOC,CAAAA,KAAP,KAAkB,oBAAlB,CACA,MAAOC,CAAAA,WAAP,KAAwB,4BAAxB,CAEA,MAAOC,CAAAA,YAAP,KAAyB,2DAAzB,CACA,MAAOC,CAAAA,UAAP,KAAuB,iDAAvB,C,wFAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,CAE5B,GAAMC,CAAAA,IAAI,CAAGhB,UAAU,CAACW,WAAD,CAAvB,CAEA;AACA,cAAoCZ,QAAQ,CAAC,CAC3CkB,UAAU,CAAEF,KAAK,CAACG,QAAN,CAAeC,KAAf,CAAqBC,KAArB,CAA2BH,UADI,CAE3CI,YAAY,CAAEN,KAAK,CAACG,QAAN,CAAeC,KAAf,CAAqBC,KAArB,CAA2BC,YAFE,CAAD,CAA5C,wCAAOC,UAAP,eAAmBC,aAAnB,eAKA,eAAoCxB,QAAQ,CAAC,CAC3CyB,KAAK,CAAE,KADoC,CAE3CC,YAAY,CAAE,IAF6B,CAAD,CAA5C,yCAAOC,UAAP,eAAmBC,aAAnB,eAKA,eAA0C5B,QAAQ,CAAC,CACjD6B,OAAO,CAAE,CACPC,IAAI,CAAE,EADC,CAEPC,KAAK,CAAE,EAFA,CAGPC,MAAM,CAAE,EAHD,CAIPC,OAAO,CAAE,EAJF,CADwC,CAAD,CAAlD,yCAAOC,aAAP,eAAsBC,gBAAtB,eASA,eAA8CnC,QAAQ,CAAC,CACrDoC,KAAK,CAAE,CACL,CACEC,EAAE,CAAE,iBADN,CAEEC,OAAO,CACL,gEAHJ,CAIEC,QAAQ,CAAE,IAJZ,CAKEC,KAAK,CAAE,KALT,CADK,CAQL,CACEH,EAAE,CAAE,kBADN,CAEEC,OAAO,CAAE,uDAFX,CAGEC,QAAQ,CAAE,IAHZ,CAIEC,KAAK,CAAE,KAJT,CARK,CAcL,CACEH,EAAE,CAAE,mBADN,CAEEC,OAAO,CAAE,sCAFX,CAGEC,QAAQ,CAAE,IAHZ,CAIEC,KAAK,CAAE,KAJT,CAdK,CAoBL,CACEH,EAAE,CAAE,oBADN,CAEEC,OAAO,CAAE,8DAFX,CAGEC,QAAQ,CAAE,KAHZ,CAIEC,KAAK,CAAE,IAJT,CApBK,CAD8C,CA4BrDC,SAAS,CAAE,KA5B0C,CAAD,CAAtD,yCAAOC,eAAP,eAAwBC,kBAAxB,eA+BA,eAAwC3C,QAAQ,CAAC,CAC/C8B,IAAI,CAAE,IADyC,CAE/CC,KAAK,CAAE,IAFwC,CAG/CC,MAAM,CAAE,IAHuC,CAI/CC,OAAO,CAAE,IAJsC,CAAD,CAAhD,0CAAOW,YAAP,gBAAqBC,eAArB,gBAOA;AACA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1B9B,KAAK,CAAC+B,OAAN,CAAcC,IAAd,CAAmB,CACjBC,QAAQ,CAAE,GADO,CAEjB7B,KAAK,CAAE,CACLC,KAAK,CAAEE,UADF,CAFU,CAAnB,EAMD,CAPD,CASA;AACA,GAAM2B,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAQC,eAAR,CAAyBC,SAAzB,CAAuC,CACtD;AACA,GAAMC,CAAAA,UAAU,kBAAQZ,eAAR,CAAhB,CAEA;AACA,GAAMa,CAAAA,SAAS,CAAGD,UAAU,CAAClB,KAAX,CAAiBoB,SAAjB,CAChB,SAACC,KAAD,QAAWA,CAAAA,KAAK,CAACpB,EAAN,GAAae,eAAxB,EADgB,CAAlB,CAIA,GAAId,CAAAA,OAAO,CAAG,IAAd,CAEA;AACA,GACEgB,UAAU,CAAClB,KAAX,CAAiBmB,SAAjB,EAA4BhB,QAA5B,EACAc,SAAS,GAAK,OADd,EAEAF,KAAK,CAACO,IAAN,KAAiB,EAHnB,CAIE,CACA;AACApB,OAAO,CAAGgB,UAAU,CAAClB,KAAX,CAAiBmB,SAAjB,EAA4BjB,OAAtC,CACAgB,UAAU,CAAClB,KAAX,CAAiBmB,SAAjB,EAA4Bf,KAA5B,CAAoC,KAApC,CACD,CARD,IAQO,IAAIY,eAAe,GAAK,kBAAxB,CAA4C,CACjD;AAEA,GAAIO,CAAAA,OAAO,CAAG,2CAAd,CACA,GAAIC,CAAAA,QAAQ,CAAGD,OAAO,CAACE,IAAR,CAAaV,KAAb,CAAf,CAEA,GAAIS,QAAJ,CAAc,CACZN,UAAU,CAAClB,KAAX,CAAiBmB,SAAjB,EAA4Bf,KAA5B,CAAoC,IAApC,CACD,CAFD,IAEO,CACLc,UAAU,CAAClB,KAAX,CAAiBmB,SAAjB,EAA4Bf,KAA5B,CAAoC,KAApC,CACAF,OAAO,CAAGgB,UAAU,CAAClB,KAAX,CAAiBmB,SAAjB,EAA4BjB,OAAtC,CACD,CACF,CAZM,IAYA,IAAIc,eAAe,GAAK,iBAAxB,CAA2C,CAChD;AAEA,GAAIO,CAAAA,QAAO,CAAG,oBAAd,CACA,GAAIG,CAAAA,SAAS,CAAGH,QAAO,CAACE,IAAR,CAAaV,KAAb,CAAhB,CAEA,GAAIW,SAAJ,CAAe,CACbR,UAAU,CAAClB,KAAX,CAAiBmB,SAAjB,EAA4Bf,KAA5B,CAAoC,IAApC,CACD,CAFD,IAEO,CACLc,UAAU,CAAClB,KAAX,CAAiBmB,SAAjB,EAA4Bf,KAA5B,CAAoC,KAApC,CACAF,OAAO,CAAGgB,UAAU,CAAClB,KAAX,CAAiBmB,SAAjB,EAA4BjB,OAAtC,CACD,CACF,CAZM,IAYA,IAAIa,KAAK,GAAK,UAAd,CAA0B,CAC/B;AACAG,UAAU,CAAClB,KAAX,CAAiBmB,SAAjB,EAA4Bf,KAA5B,CAAoC,IAApC,CACAc,UAAU,CAAClB,KAAX,CAAiB,CAAjB,EAAoBI,KAApB,CAA4B,KAA5B,CACAc,UAAU,CAAClB,KAAX,CAAiB,CAAjB,EAAoBG,QAApB,CAA+B,IAA/B,CACD,CALM,IAKA,IAAIY,KAAK,GAAK,YAAd,CAA4B,CACjC;AACAG,UAAU,CAAClB,KAAX,CAAiBmB,SAAjB,EAA4Bf,KAA5B,CAAoC,IAApC,CACAc,UAAU,CAAClB,KAAX,CAAiB,CAAjB,EAAoBG,QAApB,CAA+B,KAA/B,CACAe,UAAU,CAAClB,KAAX,CAAiB,CAAjB,EAAoBI,KAApB,CAA4B,IAA5B,CACD,CALM,IAKA,IACLc,UAAU,CAAClB,KAAX,CAAiBmB,SAAjB,EAA4BhB,QAA5B,EACAa,eAAe,GAAK,oBAFf,CAGL,CACA;AAEA,GAAIO,CAAAA,SAAO,CAAG,2BAAd,CACA,GAAII,CAAAA,YAAY,CAAGJ,SAAO,CAACE,IAAR,CAAaV,KAAb,CAAnB,CAEA,GAAIY,YAAJ,CAAkB,CAChBT,UAAU,CAAClB,KAAX,CAAiBmB,SAAjB,EAA4Bf,KAA5B,CAAoC,IAApC,CACD,CAFD,IAEO,CACLc,UAAU,CAAClB,KAAX,CAAiBmB,SAAjB,EAA4Bf,KAA5B,CAAoC,KAApC,CACAF,OAAO,CAAGgB,UAAU,CAAClB,KAAX,CAAiBmB,SAAjB,EAA4BjB,OAAtC,CACD,CACF,CAfM,IAeA,CACL;AACAA,OAAO,CAAG,IAAV,CACAgB,UAAU,CAAClB,KAAX,CAAiBmB,SAAjB,EAA4Bf,KAA5B,CAAoC,IAApC,CACD,CAED,GAAIwB,CAAAA,QAAQ,kBAAQpB,YAAR,CAAZ,CAEA,OAAQQ,eAAR,EACE,IAAK,iBAAL,CACEY,QAAQ,CAAClC,IAAT,CAAgBQ,OAAhB,CACA,MACF,IAAK,kBAAL,CACE0B,QAAQ,CAACjC,KAAT,CAAiBO,OAAjB,CACA,MACF,IAAK,mBAAL,CACE0B,QAAQ,CAAChC,MAAT,CAAkBM,OAAlB,CACA,MACF,IAAK,oBAAL,CACE0B,QAAQ,CAAC/B,OAAT,CAAmBK,OAAnB,CACA,MACF,QACA;AAdF,CAiBAO,eAAe,kBAAMmB,QAAN,EAAf,CAEA;AACA,GAAIC,CAAAA,WAAW,CAAG,IAAlB,CAEA,IAAK,GAAIC,CAAAA,CAAT,GAAcZ,CAAAA,UAAU,CAAClB,KAAzB,CAAgC,CAC9B,GAAI,CAACkB,UAAU,CAAClB,KAAX,CAAiB8B,CAAjB,EAAoB1B,KAAzB,CAAgC,CAC9ByB,WAAW,CAAG,KAAd,CACD,CACF,CAED;AACAtB,kBAAkB,CAAC,CAAEP,KAAK,CAAEkB,UAAU,CAAClB,KAApB,CAA2BK,SAAS,CAAEwB,WAAtC,CAAD,CAAlB,CACD,CA3GD,CA6GA;AACA,GAAME,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,KAAD,CAAQhB,eAAR,CAAyBC,SAAzB,CAAuC,CAChE,GAAIgB,CAAAA,eAAe,CAAGnC,aAAa,CAACL,OAApC,CAEA,OAAQuB,eAAR,EACE,IAAK,iBAAL,CACEiB,eAAe,CAACvC,IAAhB,CAAuBsC,KAAK,CAACE,MAAN,CAAanB,KAApC,CACAD,QAAQ,CAACkB,KAAK,CAACE,MAAN,CAAanB,KAAd,CAAqBC,eAArB,CAAsCC,SAAtC,CAAR,CACA,MACF,IAAK,kBAAL,CACEgB,eAAe,CAACtC,KAAhB,CAAwBqC,KAAK,CAACE,MAAN,CAAanB,KAArC,CACAD,QAAQ,CAACkB,KAAK,CAACE,MAAN,CAAanB,KAAd,CAAqBC,eAArB,CAAsCC,SAAtC,CAAR,CACA,MACF,IAAK,mBAAL,CACEgB,eAAe,CAACrC,MAAhB,CAAyBoC,KAAK,CAACE,MAAN,CAAaC,WAAtC,CACArB,QAAQ,CAACkB,KAAK,CAACE,MAAN,CAAaC,WAAd,CAA2BnB,eAA3B,CAA4CC,SAA5C,CAAR,CACA,MACF,IAAK,oBAAL,CACEgB,eAAe,CAACpC,OAAhB,CAA0BmC,KAAK,CAACE,MAAN,CAAanB,KAAvC,CACAD,QAAQ,CAACkB,KAAK,CAACE,MAAN,CAAanB,KAAd,CAAqBC,eAArB,CAAsCC,SAAtC,CAAR,CACA,MACF,QACA;AAlBF,CAqBAlB,gBAAgB,CAAC,CAAEN,OAAO,CAAEwC,eAAX,CAAD,CAAhB,CACD,CAzBD,CA2BA;AAEA,GAAIG,CAAAA,QAAQ,CAAG,CAAC9B,eAAe,CAACD,SAAhC,CAEA;AAEA,GAAMgC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CAC5B;AACA,GAAIpD,CAAAA,KAAK,CAAGE,UAAZ,CAEA;AACAF,KAAK,CAACgB,EAAN,CAAW3B,MAAM,EAAjB,CAEA;AACA,GAAIgE,CAAAA,SAAS,CAAG,GAAIC,CAAAA,IAAJ,EAAhB,CAEA,GAAMC,CAAAA,MAAM,CAAG,CACb,KADa,CAEb,KAFa,CAGb,KAHa,CAIb,KAJa,CAKb,KALa,CAMb,KANa,CAOb,KAPa,CAQb,KARa,CASb,KATa,CAUb,KAVa,CAWb,KAXa,CAYb,KAZa,CAAf,CAcA,GAAMC,CAAAA,IAAI,CAAG,CAAC,KAAD,CAAQ,KAAR,CAAe,KAAf,CAAsB,KAAtB,CAA6B,KAA7B,CAAoC,KAApC,CAA2C,KAA3C,CAAb,CAEA,GAAIC,CAAAA,MAAM,CAAGJ,SAAS,CAACK,MAAV,EAAb,CACA,GAAIC,CAAAA,GAAG,CAAGH,IAAI,CAACC,MAAD,CAAd,CAEA,GAAIG,CAAAA,QAAQ,CAAGP,SAAS,CAACQ,QAAV,EAAf,CACA,GAAIC,CAAAA,KAAK,CAAGP,MAAM,CAACK,QAAD,CAAlB,CAEA,GAAIG,CAAAA,IAAI,CAAGV,SAAS,CAACW,OAAV,EAAX,CACA,GAAIC,CAAAA,IAAI,CAAGZ,SAAS,CAACa,WAAV,EAAX,CAEA;AACA,GAAIC,CAAAA,aAAa,CAAGR,GAAG,CAAG,GAAN,CAAYI,IAAZ,CAAmB,GAAnB,CAAyBD,KAAzB,CAAiC,GAAjC,CAAuCG,IAA3D,CAEA;AACAjE,KAAK,CAAC+D,IAAN,CAAaI,aAAb,CAEA;AACAnE,KAAK,CAACQ,OAAN,CAAgBK,aAAa,CAACL,OAA9B,CAEAR,KAAK,CAACoE,MAAN,CAAexE,IAAI,CAACwE,MAApB,CAEA9E,KAAK,CACF+E,IADH,CACQ,WADR,CACqBrE,KADrB,CAC2B,CACvBsE,OAAO,CAAE,CAAEC,aAAa,CAAE,UAAY3E,IAAI,CAAC4E,KAAlC,CADc,CAD3B,EAIGC,IAJH,CAIQ,SAACC,QAAD,CAAc,CAClB/E,KAAK,CAAC+B,OAAN,CAAcC,IAAd,CAAmB,gBAAnB,EACD,CANH,EAOGgD,KAPH,CAOS,SAACvE,KAAD,CAAW,CAChB,GAAIwE,CAAAA,QAAQ,CAAG,EAAf,CACA,GAAIxE,KAAK,CAACsE,QAAV,CAAoB,CAClBE,QAAQ,CAAGxE,KAAK,CAACsE,QAAN,CAAeG,IAAf,CAAoB5D,OAA/B,CACD,CAFD,IAEO,CACL2D,QAAQ,CAAG,yCAAX,CACD,CACDrE,aAAa,CAAC,CAAEH,KAAK,CAAE,IAAT,CAAeC,YAAY,CAAEuE,QAA7B,CAAD,CAAb,CACD,CAfH,EAgBD,CA9DD,CAgEA;AAEA,GAAME,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzBvE,aAAa,CAAC,CACZH,KAAK,CAAE,KADK,CAEZC,YAAY,CAAE,IAFF,CAAD,CAAb,CAID,CALD,CAOA;AAEA,GAAI0E,CAAAA,SAAS,CAAG,IAAhB,CAEA,GAAIzE,UAAU,CAACF,KAAf,CAAsB,CACpB2E,SAAS,cACP,KAAC,UAAD,EAAY,KAAK,CAAEzE,UAAU,CAACD,YAA9B,CAA4C,OAAO,CAAEyE,YAArD,EADF,CAGD,CAJD,IAIO,CACLC,SAAS,cACP,KAAC,IAAD,wBACE,MAAC,IAAD,CAAM,GAAN,EAAU,OAAO,CAAE,CAAnB,wBACE,KAAC,IAAD,CAAM,MAAN,EAAa,KAAK,CAAE,CAApB,uBACE,MAAC,OAAD,EAAS,KAAK,CAAC,KAAf,wBACE,KAAC,MAAD,EAAQ,EAAE,CAAC,IAAX,CAAgB,SAAS,CAAC,QAA1B,CAAmC,KAAK,CAAC,KAAzC,iCADF,cAIE,KAAC,YAAD,EACE,IAAI,CAAEpF,KAAK,CAACG,QAAN,CAAeC,KAAf,CAAqBiF,IAD7B,CAEE,QAAQ,CAAErF,KAAK,CAACG,QAAN,CAAeC,KAAf,CAAqBC,KAArB,CAA2BC,YAFvC,CAGE,KAAK,CAAEN,KAAK,CAACG,QAAN,CAAeC,KAAf,CAAqBC,KAArB,CAA2BH,UAHpC,EAJF,cASE,KAAC,MAAD,EAAQ,KAAK,CAAC,KAAd,CAAoB,OAAO,CAAE4B,aAA7B,qBATF,GADF,EADF,cAiBE,KAAC,IAAD,CAAM,MAAN,EAAa,KAAK,CAAE,EAApB,uBACE,MAAC,OAAD,EAAS,KAAK,CAAC,KAAf,wBACE,KAAC,MAAD,EAAQ,EAAE,CAAC,IAAX,CAAgB,SAAS,CAAC,QAA1B,CAAmC,KAAK,CAAC,KAAzC,iCADF,cAIE,MAAC,IAAD,EAAM,EAAE,CAAC,MAAT,wBACE,KAAC,IAAD,CAAM,KAAN,EACE,KAAK,CAAEF,YAAY,CAACd,IADtB,CAEE,QAAQ,KAFV,CAGE,KAAK,CAAC,MAHR,CAIE,WAAW,CAAC,MAJd,CAKE,EAAE,CAAC,iBALL,CAME,QAAQ,CAAE,kBAACsC,KAAD,QACRD,CAAAA,kBAAkB,CAACC,KAAD,CAAQ,iBAAR,CAA2B,OAA3B,CADV,EANZ,EADF,cAWE,KAAC,IAAD,CAAM,KAAN,EACE,KAAK,CAAExB,YAAY,CAACb,KADtB,CAEE,QAAQ,KAFV,CAGE,KAAK,CAAC,OAHR,CAIE,WAAW,CAAC,wBAJd,CAKE,EAAE,CAAC,kBALL,CAME,QAAQ,CAAE,kBAACqC,KAAD,QACRD,CAAAA,kBAAkB,CAACC,KAAD,CAAQ,kBAAR,CAA4B,OAA5B,CADV,EANZ,EAXF,cAqBE,KAAC,IAAD,CAAM,KAAN,EACE,OAAO,CAAE9D,MADX,CAEE,QAAQ,KAFV,CAGE,KAAK,CAAEsC,YAAY,CAACZ,MAHtB,CAIE,KAAK,CAAC,iBAJR,CAKE,OAAO,CAAE,CACP,CAAEsE,GAAG,CAAE,GAAP,CAAYC,IAAI,CAAE,YAAlB,CAAgCpD,KAAK,CAAE,YAAvC,CADO,CAEP,CAAEmD,GAAG,CAAE,GAAP,CAAYC,IAAI,CAAE,UAAlB,CAA8BpD,KAAK,CAAE,UAArC,CAFO,CALX,CASE,WAAW,CAAC,wBATd,CAUE,EAAE,CAAC,mBAVL,CAWE,QAAQ,CAAE,kBAACiB,KAAD,QACRD,CAAAA,kBAAkB,CAACC,KAAD,CAAQ,mBAAR,CAA6B,QAA7B,CADV,EAXZ,EArBF,cAoCE,KAAC,IAAD,CAAM,KAAN,EACE,KAAK,CAAExB,YAAY,CAACX,OADtB,CAEE,QAAQ,CAAES,eAAe,CAACN,KAAhB,CAAsB,CAAtB,EAAyBG,QAFrC,CAGE,KAAK,KAHP,CAIE,KAAK,CAAC,SAJR,CAKE,WAAW,CAAC,SALd,CAME,EAAE,CAAC,oBANL,CAOE,QAAQ,CAAE,kBAAC6B,KAAD,QACRD,CAAAA,kBAAkB,CAACC,KAAD,CAAQ,oBAAR,CAA8B,OAA9B,CADV,EAPZ,EApCF,cA+CE,KAAC,MAAD,EACE,IAAI,CAAC,QADP,CAEE,KAAK,CAAC,OAFR,CAGE,QAAQ,CAAEI,QAHZ,CAIE,OAAO,CAAEC,eAJX,oBA/CF,GAJF,GADF,EAjBF,GADF,EADF,CAqFD,CAED;AAEA,mBAAO,KAAC,KAAD,CAAO,QAAP,WAAiB2B,SAAjB,EAAP,CACD,CApYD,CAsYA,cAAe5F,CAAAA,UAAU,CAACO,UAAD,CAAzB","sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport { Grid, Form, Header, Segment, Select, Button } from \"semantic-ui-react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport axios from \"../../axios-orders\";\r\nimport AuthContext from \"../../context/auth-context\";\r\n\r\nimport OrderSummary from \"../../components/Order/Checkout/OrderSummary/OrderSummary\";\r\nimport ErrorModal from \"../../components/Feedback/ErrorModal/ErrorModal\";\r\n\r\nconst PlaceOrder = (props) => {\r\n\r\n  const auth = useContext(AuthContext);\r\n\r\n  // CREATE STATES\r\n  const [orderState, setOrderState] = useState({\r\n    totalPrice: props.location.state.order.totalPrice,\r\n    chosenStyles: props.location.state.order.chosenStyles,\r\n  });\r\n\r\n  const [errorState, setErrorState] = useState({\r\n    error: false,\r\n    errorMessage: null,\r\n  });\r\n\r\n  const [customerState, setCustomerState] = useState({\r\n    details: {\r\n      name: \"\",\r\n      phone: \"\",\r\n      method: \"\",\r\n      address: \"\",\r\n    },\r\n  });\r\n\r\n  const [validationState, setValidationState] = useState({\r\n    rules: [\r\n      {\r\n        id: \"form-input-name\",\r\n        message:\r\n          \"Please enter your name (letters and spaces only, min length 2)\",\r\n        required: true,\r\n        valid: false,\r\n      },\r\n      {\r\n        id: \"form-input-phone\",\r\n        message: \"Please enter your phone number (area code and number)\",\r\n        required: true,\r\n        valid: false,\r\n      },\r\n      {\r\n        id: \"form-input-method\",\r\n        message: \"Please choose collection or delivery\",\r\n        required: true,\r\n        valid: false,\r\n      },\r\n      {\r\n        id: \"form-input-address\",\r\n        message: \"Please enter your delivery address (house number and street)\",\r\n        required: false,\r\n        valid: true,\r\n      },\r\n    ],\r\n    formValid: false,\r\n  });\r\n\r\n  const [messageState, setMessageState] = useState({\r\n    name: null,\r\n    phone: null,\r\n    method: null,\r\n    address: null,\r\n  });\r\n\r\n  // CANCEL (GO BACK) HANDLER\r\n  const cancelHandler = () => {\r\n    props.history.push({\r\n      pathname: \"/\",\r\n      state: {\r\n        order: orderState,\r\n      },\r\n    });\r\n  };\r\n\r\n  // VALIDATE FUNCTION\r\n  const validate = (value, inputIdentifier, inputType) => {\r\n    // copy the validation state\r\n    const validation = { ...validationState };\r\n\r\n    // find the rule for this input\r\n    const inputRule = validation.rules.findIndex(\r\n      (input) => input.id === inputIdentifier\r\n    );\r\n\r\n    let message = null;\r\n\r\n    // check if it is required and also empty (for inputs only)\r\n    if (\r\n      validation.rules[inputRule].required &&\r\n      inputType === \"input\" &&\r\n      value.trim() === \"\"\r\n    ) {\r\n      // get the error message and set valid to false\r\n      message = validation.rules[inputRule].message;\r\n      validation.rules[inputRule].valid = false;\r\n    } else if (inputIdentifier === \"form-input-phone\") {\r\n      //check for a valid phone number\r\n\r\n      let pattern = /^[+]?[(]?[0-9]{3,5}[)]?[-\\s.]?[0-9]{6,7}$/;\r\n      let validNum = pattern.test(value);\r\n\r\n      if (validNum) {\r\n        validation.rules[inputRule].valid = true;\r\n      } else {\r\n        validation.rules[inputRule].valid = false;\r\n        message = validation.rules[inputRule].message;\r\n      }\r\n    } else if (inputIdentifier === \"form-input-name\") {\r\n      //check for a valid name (letters and spaces only)\r\n\r\n      let pattern = /^[A-Za-z\\s]{2,30}$/;\r\n      let validName = pattern.test(value);\r\n\r\n      if (validName) {\r\n        validation.rules[inputRule].valid = true;\r\n      } else {\r\n        validation.rules[inputRule].valid = false;\r\n        message = validation.rules[inputRule].message;\r\n      }\r\n    } else if (value === \"Delivery\") {\r\n      //set address to required\r\n      validation.rules[inputRule].valid = true;\r\n      validation.rules[3].valid = false;\r\n      validation.rules[3].required = true;\r\n    } else if (value === \"Collection\") {\r\n      //set address to not required\r\n      validation.rules[inputRule].valid = true;\r\n      validation.rules[3].required = false;\r\n      validation.rules[3].valid = true;\r\n    } else if (\r\n      validation.rules[inputRule].required &&\r\n      inputIdentifier === \"form-input-address\"\r\n    ) {\r\n      //check for a valid address (alphanumeric plus some special characters)\r\n\r\n      let pattern = /^[#.0-9a-zA-Z\\s,-]{2,50}$/;\r\n      let validAddress = pattern.test(value);\r\n\r\n      if (validAddress) {\r\n        validation.rules[inputRule].valid = true;\r\n      } else {\r\n        validation.rules[inputRule].valid = false;\r\n        message = validation.rules[inputRule].message;\r\n      }\r\n    } else {\r\n      // otherwise reset the message and set valid back to true\r\n      message = null;\r\n      validation.rules[inputRule].valid = true;\r\n    }\r\n\r\n    let msgState = { ...messageState };\r\n\r\n    switch (inputIdentifier) {\r\n      case \"form-input-name\":\r\n        msgState.name = message;\r\n        break;\r\n      case \"form-input-phone\":\r\n        msgState.phone = message;\r\n        break;\r\n      case \"form-input-method\":\r\n        msgState.method = message;\r\n        break;\r\n      case \"form-input-address\":\r\n        msgState.address = message;\r\n        break;\r\n      default:\r\n      // code block\r\n    }\r\n\r\n    setMessageState({ ...msgState });\r\n\r\n    // check if the whole form is valid\r\n    let formIsValid = true;\r\n\r\n    for (let i in validation.rules) {\r\n      if (!validation.rules[i].valid) {\r\n        formIsValid = false;\r\n      }\r\n    }\r\n\r\n    // update state\r\n    setValidationState({ rules: validation.rules, formValid: formIsValid });\r\n  };\r\n\r\n  // FORM CHANGED HANDLER\r\n  const formChangedHandler = (event, inputIdentifier, inputType) => {\r\n    let customerDetails = customerState.details;\r\n\r\n    switch (inputIdentifier) {\r\n      case \"form-input-name\":\r\n        customerDetails.name = event.target.value;\r\n        validate(event.target.value, inputIdentifier, inputType);\r\n        break;\r\n      case \"form-input-phone\":\r\n        customerDetails.phone = event.target.value;\r\n        validate(event.target.value, inputIdentifier, inputType);\r\n        break;\r\n      case \"form-input-method\":\r\n        customerDetails.method = event.target.textContent;\r\n        validate(event.target.textContent, inputIdentifier, inputType);\r\n        break;\r\n      case \"form-input-address\":\r\n        customerDetails.address = event.target.value;\r\n        validate(event.target.value, inputIdentifier, inputType);\r\n        break;\r\n      default:\r\n      // code block\r\n    }\r\n\r\n    setCustomerState({ details: customerDetails });\r\n  };\r\n\r\n  // DISABLE/ENABLE FORM SUBMIT BUTTON\r\n\r\n  let disabled = !validationState.formValid;\r\n\r\n  // CHECKOUT HANDLER\r\n\r\n  const checkoutHandler = () => {\r\n    // get order from orderState\r\n    let order = orderState;\r\n\r\n    // add unique id\r\n    order.id = uuidv4();\r\n\r\n    // create formatted date\r\n    let orderDate = new Date();\r\n\r\n    const months = [\r\n      \"Jan\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\",\r\n    ];\r\n    const days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n\r\n    let dayNum = orderDate.getDay();\r\n    let day = days[dayNum];\r\n\r\n    let monthNum = orderDate.getMonth();\r\n    let month = months[monthNum];\r\n\r\n    let date = orderDate.getDate();\r\n    let year = orderDate.getFullYear();\r\n\r\n    // saves date in the format \"Fri 19 Mar 2021\"\r\n    let formattedDate = day + \" \" + date + \" \" + month + \" \" + year;\r\n\r\n    // add formattedDate to order\r\n    order.date = formattedDate;\r\n\r\n    // add customer details to order\r\n    order.details = customerState.details;\r\n\r\n    order.userId = auth.userId;\r\n\r\n    axios\r\n      .post(\"/checkout\", order,{\r\n        headers: { Authorization: \"Bearer \" + auth.token}\r\n      })\r\n      .then((response) => {\r\n        props.history.push(\"/order-success\");\r\n      })\r\n      .catch((error) => {\r\n        let errorMsg = \"\";\r\n        if (error.response) {\r\n          errorMsg = error.response.data.message;\r\n        } else {\r\n          errorMsg = \"There was a problem creating your order\";\r\n        }\r\n        setErrorState({ error: true, errorMessage: errorMsg });\r\n      });\r\n  };\r\n\r\n  // ERROR HANDLER\r\n\r\n  const errorHandler = () => {\r\n    setErrorState({\r\n      error: false,\r\n      errorMessage: null,\r\n    });\r\n  };\r\n\r\n  // DISPLAY ERROR MODAL\r\n\r\n  let orderForm = null;\r\n\r\n  if (errorState.error) {\r\n    orderForm = (\r\n      <ErrorModal error={errorState.errorMessage} onClear={errorHandler} />\r\n    );\r\n  } else {\r\n    orderForm = (\r\n      <Grid>\r\n        <Grid.Row columns={2}>\r\n          <Grid.Column width={6}>\r\n            <Segment color=\"red\">\r\n              <Header as=\"h2\" textAlign=\"center\" color=\"red\">\r\n                Confirm your order:\r\n              </Header>\r\n              <OrderSummary\r\n                menu={props.location.state.menu}\r\n                toppings={props.location.state.order.chosenStyles}\r\n                price={props.location.state.order.totalPrice}\r\n              />\r\n              <Button color=\"red\" onClick={cancelHandler}>\r\n                Go Back\r\n              </Button>\r\n            </Segment>\r\n          </Grid.Column>\r\n\r\n          <Grid.Column width={10}>\r\n            <Segment color=\"red\">\r\n              <Header as=\"h2\" textAlign=\"center\" color=\"red\">\r\n                Enter your details:\r\n              </Header>\r\n              <Form id=\"form\">\r\n                <Form.Input\r\n                  error={messageState.name}\r\n                  required\r\n                  label=\"Name\"\r\n                  placeholder=\"Name\"\r\n                  id=\"form-input-name\"\r\n                  onChange={(event) =>\r\n                    formChangedHandler(event, \"form-input-name\", \"input\")\r\n                  }\r\n                />\r\n                <Form.Input\r\n                  error={messageState.phone}\r\n                  required\r\n                  label=\"Phone\"\r\n                  placeholder=\"Phone e.g. 086-1234567\"\r\n                  id=\"form-input-phone\"\r\n                  onChange={(event) =>\r\n                    formChangedHandler(event, \"form-input-phone\", \"input\")\r\n                  }\r\n                />\r\n                <Form.Field\r\n                  control={Select}\r\n                  required\r\n                  error={messageState.method}\r\n                  label=\"Delivery method\"\r\n                  options={[\r\n                    { key: \"c\", text: \"Collection\", value: \"collection\" },\r\n                    { key: \"d\", text: \"Delivery\", value: \"delivery\" },\r\n                  ]}\r\n                  placeholder=\"Collection or Delivery\"\r\n                  id=\"form-input-method\"\r\n                  onChange={(event) =>\r\n                    formChangedHandler(event, \"form-input-method\", \"select\")\r\n                  }\r\n                />\r\n                <Form.Input\r\n                  error={messageState.address}\r\n                  required={validationState.rules[3].required}\r\n                  fluid\r\n                  label=\"Address\"\r\n                  placeholder=\"Address\"\r\n                  id=\"form-input-address\"\r\n                  onChange={(event) =>\r\n                    formChangedHandler(event, \"form-input-address\", \"input\")\r\n                  }\r\n                />\r\n                <Button\r\n                  type=\"submit\"\r\n                  color=\"green\"\r\n                  disabled={disabled}\r\n                  onClick={checkoutHandler}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </Form>\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  // DISPLAY ORDER SUMMARY AND FORM\r\n\r\n  return <React.Fragment>{orderForm}</React.Fragment>;\r\n};\r\n\r\nexport default withRouter(PlaceOrder);\r\n"]},"metadata":{},"sourceType":"module"}