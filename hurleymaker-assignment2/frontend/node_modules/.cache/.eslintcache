[{"/Users/BrienOShane93/Documents/GitHub/react-intro/hurleymaker-assignment2/frontend/src/index.js":"1","/Users/BrienOShane93/Documents/GitHub/react-intro/hurleymaker-assignment2/frontend/src/App.js":"2","/Users/BrienOShane93/Documents/GitHub/react-intro/hurleymaker-assignment2/frontend/src/reportWebVitals.js":"3","/Users/BrienOShane93/Documents/GitHub/react-intro/hurleymaker-assignment2/frontend/src/components/Layout/Layout.js":"4","/Users/BrienOShane93/Documents/GitHub/react-intro/hurleymaker-assignment2/frontend/src/components/Nav/Nav.js":"5","/Users/BrienOShane93/Documents/GitHub/react-intro/hurleymaker-assignment2/frontend/src/containers/YourOrders/YourOrders.js":"6","/Users/BrienOShane93/Documents/GitHub/react-intro/hurleymaker-assignment2/frontend/src/containers/PlaceOrder/PlaceOrder.js":"7","/Users/BrienOShane93/Documents/GitHub/react-intro/hurleymaker-assignment2/frontend/src/containers/PlaceOrder/OrderSuccess/OrderSuccess.js":"8","/Users/BrienOShane93/Documents/GitHub/react-intro/hurleymaker-assignment2/frontend/src/axios-orders.js":"9","/Users/BrienOShane93/Documents/GitHub/react-intro/hurleymaker-assignment2/frontend/src/components/Order/Order.js":"10","/Users/BrienOShane93/Documents/GitHub/react-intro/hurleymaker-assignment2/frontend/src/components/Menu/Menu.js":"11","/Users/BrienOShane93/Documents/GitHub/react-intro/hurleymaker-assignment2/frontend/src/components/OrdersTable/OrdersTable.js":"12","/Users/BrienOShane93/Documents/GitHub/react-intro/hurleymaker-assignment2/frontend/src/components/Order/Checkout/OrderSummary/OrderSummary.js":"13","/Users/BrienOShane93/Documents/GitHub/react-intro/hurleymaker-assignment2/frontend/src/components/Order/Checkout/Checkout.js":"14","/Users/BrienOShane93/Documents/GitHub/react-intro/hurleymaker-assignment2/frontend/src/components/Menu/MenuItem/MenuItem.js":"15","/Users/BrienOShane93/Documents/GitHub/react-intro/hurleymaker-assignment2/frontend/src/components/OrdersTable/TableRow/TableRow.js":"16","/Users/BrienOShane93/Documents/GitHub/react-intro/hurleymaker-assignment2/frontend/src/components/Order/Controls/Controls.js":"17","/Users/BrienOShane93/Documents/GitHub/react-intro/hurleymaker-assignment2/frontend/src/components/Order/Checkout/OrderModal/OrderModal.js":"18","/Users/BrienOShane93/Documents/GitHub/react-intro/hurleymaker-assignment2/frontend/src/components/Order/Controls/Control/Control.js":"19","/Users/BrienOShane93/Documents/GitHub/react-intro/hurleymaker-assignment2/frontend/src/containers/HurleyMaker/HurleyMaker.js":"20","/Users/BrienOShane93/Documents/GitHub/react-intro/hurleymaker-assignment2/frontend/src/context/auth-context.js":"21","/Users/BrienOShane93/Documents/GitHub/react-intro/hurleymaker-assignment2/frontend/src/containers/Authenticate/Authenticate.js":"22","/Users/BrienOShane93/Documents/GitHub/react-intro/hurleymaker-assignment2/frontend/src/containers/YourAccount/YourAccount.js":"23","/Users/BrienOShane93/Documents/GitHub/react-intro/hurleymaker-assignment2/frontend/src/containers/YourAccount/AccountUpdate/AccountUpdate.js":"24","/Users/BrienOShane93/Documents/GitHub/react-intro/hurleymaker-assignment2/frontend/src/components/Feedback/ErrorModal/ErrorModal.js":"25","/Users/BrienOShane93/Documents/GitHub/react-intro/hurleymaker-assignment2/frontend/src/components/Feedback/Loader/Loader.js":"26"},{"size":523,"mtime":1617095014000,"results":"27","hashOfConfig":"28"},{"size":276,"mtime":1618942174000,"results":"29","hashOfConfig":"28"},{"size":375,"mtime":1616149836000,"results":"30","hashOfConfig":"28"},{"size":3307,"mtime":1621526566897,"results":"31","hashOfConfig":"28"},{"size":1309,"mtime":1621524782039,"results":"32","hashOfConfig":"28"},{"size":2402,"mtime":1619158856000,"results":"33","hashOfConfig":"28"},{"size":11791,"mtime":1621525547278,"results":"34","hashOfConfig":"28"},{"size":399,"mtime":1619003754000,"results":"35","hashOfConfig":"28"},{"size":136,"mtime":1617808714000,"results":"36","hashOfConfig":"28"},{"size":1299,"mtime":1621525155770,"results":"37","hashOfConfig":"28"},{"size":838,"mtime":1621526341201,"results":"38","hashOfConfig":"28"},{"size":847,"mtime":1621525153740,"results":"39","hashOfConfig":"28"},{"size":1221,"mtime":1621524953074,"results":"40","hashOfConfig":"28"},{"size":813,"mtime":1621524845824,"results":"41","hashOfConfig":"28"},{"size":368,"mtime":1621524592811,"results":"42","hashOfConfig":"28"},{"size":609,"mtime":1621525188483,"results":"43","hashOfConfig":"28"},{"size":682,"mtime":1621525035952,"results":"44","hashOfConfig":"28"},{"size":1158,"mtime":1621524951046,"results":"45","hashOfConfig":"28"},{"size":587,"mtime":1616149836000,"results":"46","hashOfConfig":"28"},{"size":5534,"mtime":1621526562865,"results":"47","hashOfConfig":"28"},{"size":175,"mtime":1619154608000,"results":"48","hashOfConfig":"28"},{"size":11243,"mtime":1619155868000,"results":"49","hashOfConfig":"28"},{"size":6055,"mtime":1621526640014,"results":"50","hashOfConfig":"28"},{"size":8008,"mtime":1619158508000,"results":"51","hashOfConfig":"28"},{"size":774,"mtime":1619003406000,"results":"52","hashOfConfig":"28"},{"size":313,"mtime":1619003414000,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1fkb3ys",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"/Users/BrienOShane93/Documents/GitHub/react-intro/hurleymaker-assignment2/frontend/src/index.js",[],["109","110"],"/Users/BrienOShane93/Documents/GitHub/react-intro/hurleymaker-assignment2/frontend/src/App.js",[],"/Users/BrienOShane93/Documents/GitHub/react-intro/hurleymaker-assignment2/frontend/src/reportWebVitals.js",[],"/Users/BrienOShane93/Documents/GitHub/react-intro/hurleymaker-assignment2/frontend/src/components/Layout/Layout.js",["111"],"/Users/BrienOShane93/Documents/GitHub/react-intro/hurleymaker-assignment2/frontend/src/components/Nav/Nav.js",[],"/Users/BrienOShane93/Documents/GitHub/react-intro/hurleymaker-assignment2/frontend/src/containers/YourOrders/YourOrders.js",["112"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"../../axios-orders\";\r\n\r\nimport OrdersTable from \"../../components/OrdersTable/OrdersTable\";\r\nimport Loader from \"../../components/Feedback/Loader/Loader\";\r\nimport ErrorModal from \"../../components/Feedback/ErrorModal/ErrorModal\";\r\nimport AuthContext from \"../../context/auth-context\";\r\n\r\nconst YourOrders = (props) => {\r\n\r\n  const auth = useContext(AuthContext);\r\n\r\n  // ORDER, ERROR AND LOADING STATE\r\n\r\n  const [pastOrdersState, setPastOrdersState] = useState({\r\n    orders: [],\r\n  });\r\n\r\n  const [errorState, setErrorState] = useState({\r\n    error: false,\r\n    errorMessage: null,\r\n  });\r\n\r\n  const [loadingState, setLoadingState] = useState({\r\n    isLoading: true,\r\n    ordersLoaded: false,\r\n    loadFailed: false,\r\n  });\r\n\r\n  // FETCH ORDERS\r\n  \r\n  useEffect(() => {\r\n\r\n    let uid = auth.userId;\r\n    let path = \"/orders/\" + uid;\r\n    axios\r\n      .get(path, { headers: { Authorization: \"Bearer \" + auth.token }})\r\n      .then((response) => {\r\n        setPastOrdersState({ orders: response.data.orders });\r\n        setLoadingState({\r\n          isLoading: false,\r\n          ordersLoaded: true,\r\n          loadFailed: loadingState.loadFailed,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        setErrorState({\r\n          error: true,\r\n          errorMessage: error.response.data.message,\r\n        });\r\n        setLoadingState({\r\n          isLoading: false,\r\n          ordersLoaded: loadingState.ordersLoaded,\r\n          loadFailed: loadingState.loadFailed,\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  // ERROR HANDLER\r\n\r\n  const errorHandler = () => {\r\n    setErrorState({\r\n      error: false,\r\n      errorMessage: null,\r\n    });\r\n    setLoadingState({\r\n      isLoading: loadingState.isLoading,\r\n      ordersLoaded: loadingState.ordersLoaded,\r\n      loadFailed: true,\r\n    });\r\n  };\r\n\r\n  // DISPLAY ORDERS\r\n\r\n  let orders = errorState.error ? (\r\n    <ErrorModal error={errorState.errorMessage} onClear={errorHandler} />\r\n  ) : (\r\n    <Loader active={loadingState.isLoading} />\r\n  );\r\n\r\n  if (loadingState.ordersLoaded && pastOrdersState.orders.length > 0) {\r\n    orders = <OrdersTable orders={pastOrdersState.orders} />;\r\n  } else if (loadingState.loadFailed) {\r\n    orders = <p>We can't load your orders... maybe try creating one?</p>;\r\n  }\r\n\r\n  return <div>{orders}</div>;\r\n};\r\n\r\nexport default YourOrders;\r\n","/Users/BrienOShane93/Documents/GitHub/react-intro/hurleymaker-assignment2/frontend/src/containers/PlaceOrder/PlaceOrder.js",["113"],"/Users/BrienOShane93/Documents/GitHub/react-intro/hurleymaker-assignment2/frontend/src/containers/PlaceOrder/OrderSuccess/OrderSuccess.js",[],"/Users/BrienOShane93/Documents/GitHub/react-intro/hurleymaker-assignment2/frontend/src/axios-orders.js",[],"/Users/BrienOShane93/Documents/GitHub/react-intro/hurleymaker-assignment2/frontend/src/components/Order/Order.js",[],"/Users/BrienOShane93/Documents/GitHub/react-intro/hurleymaker-assignment2/frontend/src/components/Menu/Menu.js",[],"/Users/BrienOShane93/Documents/GitHub/react-intro/hurleymaker-assignment2/frontend/src/components/OrdersTable/OrdersTable.js",[],"/Users/BrienOShane93/Documents/GitHub/react-intro/hurleymaker-assignment2/frontend/src/components/Order/Checkout/OrderSummary/OrderSummary.js",[],"/Users/BrienOShane93/Documents/GitHub/react-intro/hurleymaker-assignment2/frontend/src/components/Order/Checkout/Checkout.js",[],"/Users/BrienOShane93/Documents/GitHub/react-intro/hurleymaker-assignment2/frontend/src/components/Menu/MenuItem/MenuItem.js",[],"/Users/BrienOShane93/Documents/GitHub/react-intro/hurleymaker-assignment2/frontend/src/components/OrdersTable/TableRow/TableRow.js",[],"/Users/BrienOShane93/Documents/GitHub/react-intro/hurleymaker-assignment2/frontend/src/components/Order/Controls/Controls.js",[],"/Users/BrienOShane93/Documents/GitHub/react-intro/hurleymaker-assignment2/frontend/src/components/Order/Checkout/OrderModal/OrderModal.js",[],"/Users/BrienOShane93/Documents/GitHub/react-intro/hurleymaker-assignment2/frontend/src/components/Order/Controls/Control/Control.js",[],"/Users/BrienOShane93/Documents/GitHub/react-intro/hurleymaker-assignment2/frontend/src/containers/HurleyMaker/HurleyMaker.js",["114"],"/Users/BrienOShane93/Documents/GitHub/react-intro/hurleymaker-assignment2/frontend/src/context/auth-context.js",[],"/Users/BrienOShane93/Documents/GitHub/react-intro/hurleymaker-assignment2/frontend/src/containers/Authenticate/Authenticate.js",["115"],"import React, { useState, useContext } from \"react\";\r\nimport { Grid, Form, Header, Segment, Button } from \"semantic-ui-react\";\r\n\r\nimport ErrorModal from \"../../components/Feedback/ErrorModal/ErrorModal\";\r\nimport AuthContext from \"../../context/auth-context\";\r\nimport axios from '../../axios-orders';\r\n\r\nconst Authenticate = (props) => {\r\n\r\n  const auth = useContext(AuthContext);\r\n\r\n  const [isLoginMode, setIsLoginMode] = useState(false);\r\n\r\n  const [errorState, setErrorState] = useState({\r\n    error: false,\r\n    errorMessage: null,\r\n  });\r\n\r\n  const switchModeHandler = () => {\r\n    setIsLoginMode((prevMode) => !prevMode);\r\n    setAuthDetailsState({\r\n      details: {\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n      },\r\n    });\r\n    setValidationState({\r\n      rules: [\r\n        {\r\n          id: \"form-input-name\",\r\n          message:\r\n            \"Please enter your name (letters and spaces only, min length 2)\",\r\n          required: true,\r\n          valid: false,\r\n        },\r\n        {\r\n          id: \"form-input-email\",\r\n          message:\r\n            \"Please enter a valid email address (something@something.something)\",\r\n          required: true,\r\n          valid: false,\r\n        },\r\n        {\r\n          id: \"form-input-password\",\r\n          message:\r\n            \"Please enter a password (letters and numbers only, min length 6)\",\r\n          required: true,\r\n          valid: false,\r\n        },\r\n      ],\r\n      formValid: false,\r\n    });\r\n    document.getElementById(\"form\").reset();\r\n  };\r\n\r\n  const [authDetailsState, setAuthDetailsState] = useState({\r\n    details: {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n  });\r\n\r\n  const [validationState, setValidationState] = useState({\r\n    rules: [\r\n      {\r\n        id: \"form-input-name\",\r\n        message:\r\n          \"Please enter your name (letters and spaces only, min length 2)\",\r\n        required: true,\r\n        valid: false,\r\n      },\r\n      {\r\n        id: \"form-input-email\",\r\n        message:\r\n          \"Please enter a valid email address (something@something.something)\",\r\n        required: true,\r\n        valid: false,\r\n      },\r\n      {\r\n        id: \"form-input-password\",\r\n        message:\r\n          \"Please enter a password (letters and numbers only, min length 6)\",\r\n        required: true,\r\n        valid: false,\r\n      },\r\n    ],\r\n    formValid: false,\r\n  });\r\n\r\n  const [messageState, setMessageState] = useState({\r\n    name: null,\r\n    email: null,\r\n    address: null,\r\n  });\r\n\r\n  const validate = (value, inputIdentifier) => {\r\n    // copy the validation state\r\n    const validation = { ...validationState };\r\n\r\n    // find the rule for this input\r\n    const inputRule = validation.rules.findIndex(\r\n      (input) => input.id === inputIdentifier\r\n    );\r\n\r\n    let message = null;\r\n\r\n    // check if it is required and also empty\r\n    if (validation.rules[inputRule].required && value.trim() === \"\") {\r\n      // get the error message and set valid to false\r\n      message = validation.rules[inputRule].message;\r\n      validation.rules[inputRule].valid = false;\r\n    } else if (inputIdentifier === \"form-input-email\") {\r\n      //check for a valid email\r\n\r\n      let pattern = /^[^@\\s]+@[^@\\s]+\\.[^@\\s]+$/;\r\n      let validEmail = pattern.test(value);\r\n\r\n      if (validEmail) {\r\n        validation.rules[inputRule].valid = true;\r\n      } else {\r\n        validation.rules[inputRule].valid = false;\r\n        message = validation.rules[inputRule].message;\r\n      }\r\n    } else if (inputIdentifier === \"form-input-password\") {\r\n      //check for a valid password, letters and numbers only, 6 characters min\r\n\r\n      let pattern = /^[A-Za-z0-9\\s]{6,}$/;\r\n      let validPassword = pattern.test(value);\r\n\r\n      if (validPassword) {\r\n        validation.rules[inputRule].valid = true;\r\n      } else {\r\n        validation.rules[inputRule].valid = false;\r\n        message = validation.rules[inputRule].message;\r\n      }\r\n    } else if (\r\n      validation.rules[inputRule].required &&\r\n      inputIdentifier === \"form-input-name\"\r\n    ) {\r\n      //check for a valid name (letters and spaces only)\r\n\r\n      let pattern = /^[A-Za-z\\s]{2,30}$/;\r\n      let validName = pattern.test(value);\r\n\r\n      if (validName) {\r\n        validation.rules[inputRule].valid = true;\r\n      } else {\r\n        validation.rules[inputRule].valid = false;\r\n        message = validation.rules[inputRule].message;\r\n      }\r\n    } else {\r\n      // otherwise reset the message and set valid back to true\r\n      message = null;\r\n      validation.rules[inputRule].valid = true;\r\n    }\r\n\r\n    let msgState = { ...messageState };\r\n\r\n    switch (inputIdentifier) {\r\n      case \"form-input-name\":\r\n        msgState.name = message;\r\n        break;\r\n      case \"form-input-email\":\r\n        msgState.email = message;\r\n        break;\r\n      case \"form-input-password\":\r\n        msgState.password = message;\r\n        break;\r\n      default:\r\n      // code block\r\n    }\r\n\r\n    setMessageState({ ...msgState });\r\n\r\n    // check if the whole form is valid\r\n    let formIsValid = true;\r\n\r\n    for (let i in validation.rules) {\r\n      if (isLoginMode && i == 0) {\r\n        continue;\r\n      }\r\n\r\n      if (!validation.rules[i].valid) {\r\n        formIsValid = false;\r\n      }\r\n    }\r\n\r\n    // update state\r\n    setValidationState({ rules: validation.rules, formValid: formIsValid });\r\n  };\r\n\r\n  const formChangedHandler = (event, inputIdentifier) => {\r\n    let authDetails = authDetailsState.details;\r\n\r\n    switch (inputIdentifier) {\r\n      case \"form-input-name\":\r\n        authDetails.name = event.target.value;\r\n        validate(event.target.value, inputIdentifier);\r\n        break;\r\n      case \"form-input-email\":\r\n        authDetails.email = event.target.value;\r\n        validate(event.target.value, inputIdentifier);\r\n        break;\r\n      case \"form-input-password\":\r\n        let password = event.target.value;\r\n        let trimmedPassword = password.trim();\r\n        authDetails.password = trimmedPassword;\r\n        validate(trimmedPassword, inputIdentifier);\r\n        break;\r\n      default:\r\n      // code block\r\n    }\r\n\r\n    setAuthDetailsState({ details: authDetails });\r\n  };\r\n\r\n  const errorHandler = () => {\r\n    setErrorState({\r\n      error: false,\r\n      errorMessage: null,\r\n    });\r\n  };\r\n\r\n  const signupHandler = () => {\r\n    axios\r\n      .post(\"/signup\", authDetailsState.details)\r\n      .then((response) => {\r\n        auth.login(response.data.userId, response.data.token);\r\n        props.history.push(\"/\");\r\n      })\r\n      .catch((error) => {\r\n        let errorMsg = \"\";\r\n        if (error.response) {\r\n          errorMsg = error.response.data.message;\r\n        } else {\r\n          errorMsg = \"Something went wrong - signup failed\";\r\n        }\r\n        setErrorState({ error: true, errorMessage: errorMsg });\r\n      });\r\n  };\r\n\r\n  const loginHandler = () => {\r\n    axios\r\n      .post(\"/login\", authDetailsState.details)\r\n      .then((response) => {\r\n        auth.login(response.data.userId, response.data.token);\r\n        props.history.push(\"/\");\r\n      })\r\n      .catch((error) => {\r\n        let errorMsg = \"\";\r\n        if (error.response) {\r\n          errorMsg = error.response.data.message;\r\n        } else {\r\n          errorMsg = \"Something went wrong - login failed\";\r\n        }\r\n        setErrorState({ error: true, errorMessage: errorMsg });\r\n      });\r\n  };\r\n\r\n  let disabled = !validationState.formValid;\r\n\r\n  let signupBtnColor = \"grey\";\r\n  let loginBtnColor = \"grey\";\r\n\r\n  let authForm = null;\r\n\r\n  if (errorState.error) {\r\n    authForm = (\r\n      <ErrorModal error={errorState.errorMessage} onClear={errorHandler} />\r\n    );\r\n  } else {\r\n    if (isLoginMode) {\r\n      authForm = (\r\n        <Segment color=\"red\">\r\n          <Header as=\"h2\" textAlign=\"center\" color=\"red\">\r\n            Already registered? Log In!\r\n          </Header>\r\n          <Form id=\"form\">\r\n            <Form.Input\r\n              error={messageState.email}\r\n              autoComplete=\"off\"\r\n              required\r\n              label=\"Email\"\r\n              placeholder=\"Email e.g. username@mail.com\"\r\n              id=\"form-input-email\"\r\n              onChange={(event) =>\r\n                formChangedHandler(event, \"form-input-email\")\r\n              }\r\n            />\r\n            <Form.Input\r\n              error={messageState.password}\r\n              type=\"password\"\r\n              autoComplete=\"off\"\r\n              required\r\n              label=\"Password\"\r\n              placeholder=\"Password\"\r\n              id=\"form-input-password\"\r\n              onChange={(event) =>\r\n                formChangedHandler(event, \"form-input-password\")\r\n              }\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              color=\"green\"\r\n              disabled={disabled}\r\n              onClick={loginHandler}\r\n            >\r\n              Log In\r\n            </Button>\r\n          </Form>\r\n        </Segment>\r\n      );\r\n      loginBtnColor = \"red\";\r\n    } else {\r\n      authForm = (\r\n        <Segment color=\"red\">\r\n          <Header as=\"h2\" textAlign=\"center\" color=\"red\">\r\n            First time here? Sign Up!\r\n          </Header>\r\n          <Form id=\"form\">\r\n            <Form.Input\r\n              error={messageState.email}\r\n              autoComplete=\"off\"\r\n              required\r\n              label=\"Email\"\r\n              placeholder=\"Email e.g. username@mail.com\"\r\n              id=\"form-input-email\"\r\n              onChange={(event) =>\r\n                formChangedHandler(event, \"form-input-email\")\r\n              }\r\n            />\r\n            <Form.Input\r\n              error={messageState.password}\r\n              type=\"password\"\r\n              autoComplete=\"off\"\r\n              required\r\n              label=\"Password\"\r\n              placeholder=\"Password\"\r\n              id=\"form-input-password\"\r\n              onChange={(event) =>\r\n                formChangedHandler(event, \"form-input-password\")\r\n              }\r\n            />\r\n            <Form.Input\r\n              error={messageState.name}\r\n              autoComplete=\"off\"\r\n              required\r\n              label=\"Name\"\r\n              placeholder=\"Name\"\r\n              id=\"form-input-name\"\r\n              onChange={(event) => formChangedHandler(event, \"form-input-name\")}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              color=\"green\"\r\n              disabled={disabled}\r\n              onClick={signupHandler}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n          </Form>\r\n        </Segment>\r\n      );\r\n      signupBtnColor = \"red\";\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Row centered>\r\n        <Grid.Column width={10}>\r\n          <Button.Group widths=\"2\">\r\n            <Button\r\n              size=\"large\"\r\n              color={signupBtnColor}\r\n              onClick={switchModeHandler}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n            <Button.Or />\r\n            <Button\r\n              size=\"large\"\r\n              color={loginBtnColor}\r\n              onClick={switchModeHandler}\r\n            >\r\n              Log In\r\n            </Button>\r\n          </Button.Group>\r\n          {authForm}\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Authenticate;\r\n","/Users/BrienOShane93/Documents/GitHub/react-intro/hurleymaker-assignment2/frontend/src/containers/YourAccount/YourAccount.js",["116"],"/Users/BrienOShane93/Documents/GitHub/react-intro/hurleymaker-assignment2/frontend/src/containers/YourAccount/AccountUpdate/AccountUpdate.js",[],"/Users/BrienOShane93/Documents/GitHub/react-intro/hurleymaker-assignment2/frontend/src/components/Feedback/ErrorModal/ErrorModal.js",[],"/Users/BrienOShane93/Documents/GitHub/react-intro/hurleymaker-assignment2/frontend/src/components/Feedback/Loader/Loader.js",[],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":48,"column":6,"nodeType":"123","endLine":48,"endColumn":8,"suggestions":"124"},{"ruleId":"121","severity":1,"message":"125","line":57,"column":6,"nodeType":"123","endLine":57,"endColumn":8,"suggestions":"126"},{"ruleId":"127","severity":1,"message":"128","line":16,"column":22,"nodeType":"129","messageId":"130","endLine":16,"endColumn":35},{"ruleId":"121","severity":1,"message":"131","line":44,"column":6,"nodeType":"123","endLine":44,"endColumn":8,"suggestions":"132"},{"ruleId":"133","severity":1,"message":"134","line":181,"column":28,"nodeType":"135","messageId":"136","endLine":181,"endColumn":30},{"ruleId":"121","severity":1,"message":"137","line":52,"column":6,"nodeType":"123","endLine":52,"endColumn":8,"suggestions":"138"},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["141"],"React Hook useEffect has missing dependencies: 'auth.token', 'auth.userId', 'loadingState.loadFailed', and 'loadingState.ordersLoaded'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setLoadingState' needs the current value of 'loadingState.loadFailed'.",["142"],"no-unused-vars","'setOrderState' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'menuState.loadFailed'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setLoadingState' needs the current value of 'menuState.loadFailed'.",["143"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'auth.token', 'auth.userId', and 'loadingState.loadFailed'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setLoadingState' needs the current value of 'loadingState.loadFailed'.",["144"],"no-global-assign","no-unsafe-negation",{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},"Update the dependencies array to be: [history]",{"range":"153","text":"154"},"Update the dependencies array to be: [auth.token, auth.userId, loadingState.loadFailed, loadingState.ordersLoaded]",{"range":"155","text":"156"},"Update the dependencies array to be: [menuState.loadFailed]",{"range":"157","text":"158"},"Update the dependencies array to be: [auth.token, auth.userId, loadingState.loadFailed]",{"range":"159","text":"160"},[1700,1702],"[history]",[1583,1585],"[auth.token, auth.userId, loadingState.loadFailed, loadingState.ordersLoaded]",[1299,1301],"[menuState.loadFailed]",[1606,1608],"[auth.token, auth.userId, loadingState.loadFailed]"]