{"ast":null,"code":"var _jsxFileName = \"/Users/BrienOShane93/Documents/GitHub/react-intro/mern-lab-2/frontend/src/containers/YourAccount/YourAccount.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { Grid, Header, Segment, List, Image, Button, Icon, Confirm } from \"semantic-ui-react\";\nimport axios from \"../../axios-orders\";\nimport Loader from \"../../components/Feedback/Loader/Loader\";\nimport ErrorModal from \"../../components/Feedback/ErrorModal/ErrorModal\";\nimport AuthContext from \"../../context/auth-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst YourAccount = props => {\n  _s();\n\n  const auth = useContext(AuthContext); // ACCOUNT, ERROR AND LOADING STATE\n\n  const [accountState, setAccountState] = useState({\n    user: null\n  });\n  const [errorState, setErrorState] = useState({\n    error: false,\n    errorMessage: null\n  });\n  const [loadingState, setLoadingState] = useState({\n    isLoading: true,\n    loadFailed: false\n  }); // Manage state of confirm deletion dialog\n\n  const [confirmState, setConfirmState] = useState({\n    open: false\n  });\n\n  const open = () => setConfirmState({\n    open: true\n  });\n\n  const close = () => setConfirmState({\n    open: false\n  }); // FETCH ACCOUNT DETAILS\n\n\n  useEffect(() => {\n    let uid = \"12345678\"; //replace with actual user id\n\n    let path = \"/users/\" + uid;\n    axios.get(path).then(response => {\n      setAccountState({\n        user: response.data.user\n      });\n    }).catch(error => {\n      setErrorState({\n        error: true,\n        errorMessage: error.response.data.message\n      });\n      setLoadingState({\n        isLoading: false,\n        loadFailed: loadingState.loadFailed\n      });\n    });\n  }, []); // UPDATE AND DELETE HANDLERS\n\n  const updateHandler = () => {\n    props.history.push({\n      pathname: \"/update-account\",\n      state: {\n        user: accountState.user\n      }\n    });\n  };\n\n  const deleteHandler = () => {\n    let uid = \"12345678\";\n    let path = \"/deleteuser/\" + uid;\n    axios.delete(path).then(response => {\n      console.log(\"User deleted!\");\n      props.history.push(\"/\");\n    }).catch(error => {\n      let errorMsg = \"\";\n\n      if (error.response) {\n        errorMsg = error.response.data.message;\n      } else {\n        errorMsg = \"There was a problem deleting your account\";\n      }\n\n      setErrorState({\n        error: true,\n        errorMessage: errorMsg\n      });\n    });\n  }; // ERROR HANDLER\n\n\n  const errorHandler = () => {\n    setErrorState({\n      error: false,\n      errorMessage: null\n    });\n    setLoadingState({\n      isLoading: false,\n      loadFailed: true\n    });\n  }; // DISPLAY ACCOUNT\n\n\n  let account = errorState.error ? /*#__PURE__*/_jsxDEV(ErrorModal, {\n    error: errorState.errorMessage,\n    onClear: errorHandler\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Loader, {\n    active: loadingState.isLoading\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n\n  if (accountState.user && !errorState.error) {\n    account = /*#__PURE__*/_jsxDEV(Grid, {\n      children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n        centered: true,\n        children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 10,\n          children: /*#__PURE__*/_jsxDEV(Segment, {\n            color: \"red\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              divided: true,\n              children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n                width: 8,\n                children: [/*#__PURE__*/_jsxDEV(Header, {\n                  as: \"h3\",\n                  textAlign: \"center\",\n                  color: \"red\",\n                  children: \"Your Details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(List, {\n                  children: [/*#__PURE__*/_jsxDEV(List.Item, {\n                    children: [/*#__PURE__*/_jsxDEV(List.Icon, {\n                      name: \"user\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 116,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(List.Content, {\n                      children: /*#__PURE__*/_jsxDEV(\"b\", {\n                        children: [\"Name: \", accountState.user.name, \" \"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 118,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 117,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(List.Item, {\n                    children: [/*#__PURE__*/_jsxDEV(List.Icon, {\n                      name: \"mail\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 122,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(List.Content, {\n                      children: /*#__PURE__*/_jsxDEV(\"b\", {\n                        children: [\"Email: \", accountState.user.email, \" \"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 124,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 123,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(List.Item, {\n                    children: [/*#__PURE__*/_jsxDEV(List.Icon, {\n                      name: \"lock\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 128,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(List.Content, {\n                      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                        children: \"Password: \"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 130,\n                        columnNumber: 25\n                      }, this), \" \", \"\\u25AA\\u25AA\\u25AA\\u25AA\\u25AA\\u25AA\", \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 129,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 127,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"accountButtons\",\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    icon: true,\n                    labelPosition: \"left\",\n                    color: \"orange\",\n                    onClick: updateHandler,\n                    children: [/*#__PURE__*/_jsxDEV(Icon, {\n                      name: \"pencil\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 142,\n                      columnNumber: 23\n                    }, this), \"Update Your Details\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    icon: true,\n                    labelPosition: \"left\",\n                    color: \"red\",\n                    onClick: open,\n                    children: [\"Delete Your Account\", /*#__PURE__*/_jsxDEV(Icon, {\n                      name: \"trash\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 154,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Confirm, {\n                    open: confirmState.open,\n                    onCancel: close,\n                    onConfirm: deleteHandler,\n                    header: \"Are you sure?\",\n                    content: \"Deleting your account is a permanent action and cannot be undone\",\n                    cancelButton: \"Take me back\",\n                    confirmButton: \"Yes, delete my account permanently\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n                width: 8,\n                textAlign: \"center\",\n                children: /*#__PURE__*/_jsxDEV(Image, {\n                  src: \"https://img.jamieoliver.com/jamieoliver/recipe-database/oldImages/large/1474_2_1430128688.jpg?tr=w-800,h-1066\",\n                  rounded: true,\n                  size: \"large\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this);\n  } else if (loadingState.loadFailed) {\n    account = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"User can't be found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 15\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: account\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 10\n  }, this);\n};\n\n_s(YourAccount, \"D56w6y02rKUnzeBoTBKvvWbxkLw=\");\n\n_c = YourAccount;\nexport default YourAccount;\n\nvar _c;\n\n$RefreshReg$(_c, \"YourAccount\");","map":{"version":3,"sources":["/Users/BrienOShane93/Documents/GitHub/react-intro/mern-lab-2/frontend/src/containers/YourAccount/YourAccount.js"],"names":["React","useContext","Grid","Header","Segment","List","Image","Button","Icon","Confirm","axios","Loader","ErrorModal","AuthContext","YourAccount","props","auth","accountState","setAccountState","useState","user","errorState","setErrorState","error","errorMessage","loadingState","setLoadingState","isLoading","loadFailed","confirmState","setConfirmState","open","close","useEffect","uid","path","get","then","response","data","catch","message","updateHandler","history","push","pathname","state","deleteHandler","delete","console","log","errorMsg","errorHandler","account","name","email"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\r\nimport { Grid, Header, Segment, List, Image, Button, Icon, Confirm } from \"semantic-ui-react\";\r\nimport axios from \"../../axios-orders\";\r\n\r\nimport Loader from \"../../components/Feedback/Loader/Loader\";\r\nimport ErrorModal from \"../../components/Feedback/ErrorModal/ErrorModal\";\r\nimport AuthContext from \"../../context/auth-context\";\r\n\r\nconst YourAccount = (props) => {\r\n\r\n  const auth = useContext(AuthContext);\r\n\r\n  // ACCOUNT, ERROR AND LOADING STATE\r\n  const [accountState, setAccountState] = useState({\r\n    user: null,\r\n  });\r\n\r\n  const [errorState, setErrorState] = useState({\r\n    error: false,\r\n    errorMessage: null,\r\n  });\r\n\r\n  const [loadingState, setLoadingState] = useState({\r\n    isLoading: true,\r\n    loadFailed: false,\r\n  });\r\n\r\n  // Manage state of confirm deletion dialog\r\n  const [confirmState, setConfirmState] = useState({ open: false });\r\n  const open = () => setConfirmState({ open: true });\r\n  const close = () => setConfirmState({ open: false });\r\n\r\n  // FETCH ACCOUNT DETAILS\r\n  useEffect(() => {\r\n    let uid = \"12345678\"; //replace with actual user id\r\n    let path = \"/users/\" + uid;\r\n    axios\r\n      .get(path)\r\n      .then((response) => {\r\n        setAccountState({ user: response.data.user });\r\n      })\r\n      .catch((error) => {\r\n        setErrorState({\r\n          error: true,\r\n          errorMessage: error.response.data.message,\r\n        });\r\n        setLoadingState({\r\n          isLoading: false,\r\n          loadFailed: loadingState.loadFailed,\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  // UPDATE AND DELETE HANDLERS\r\n  const updateHandler = () => {\r\n    props.history.push({\r\n      pathname: \"/update-account\",\r\n      state: {\r\n        user: accountState.user,\r\n      },\r\n    });\r\n  };\r\n\r\n  const deleteHandler = () => {\r\n    let uid = \"12345678\";\r\n    let path = \"/deleteuser/\" + uid;\r\n    axios\r\n      .delete(path)\r\n      .then((response) => {\r\n        console.log(\"User deleted!\");\r\n        props.history.push(\"/\");\r\n      })\r\n      .catch((error) => {\r\n        let errorMsg = \"\";\r\n        if (error.response) {\r\n          errorMsg = error.response.data.message;\r\n        } else {\r\n          errorMsg = \"There was a problem deleting your account\";\r\n        }\r\n        setErrorState({ error: true, errorMessage: errorMsg });\r\n      });\r\n  };\r\n\r\n  // ERROR HANDLER\r\n  const errorHandler = () => {\r\n    setErrorState({\r\n      error: false,\r\n      errorMessage: null,\r\n    });\r\n    setLoadingState({\r\n      isLoading: false,\r\n      loadFailed: true,\r\n    });\r\n  };\r\n\r\n  // DISPLAY ACCOUNT\r\n  let account = errorState.error ? (\r\n    <ErrorModal error={errorState.errorMessage} onClear={errorHandler} />\r\n  ) : (\r\n    <Loader active={loadingState.isLoading} />\r\n  );\r\n\r\n  if (accountState.user && !errorState.error) {\r\n    account = (\r\n      <Grid>\r\n        <Grid.Row centered>\r\n          <Grid.Column width={10}>\r\n            <Segment color=\"red\">\r\n              <Grid divided>\r\n                <Grid.Column width={8}>\r\n                  <Header as=\"h3\" textAlign=\"center\" color=\"red\">\r\n                    Your Details\r\n                  </Header>\r\n                  <List>\r\n                    <List.Item>\r\n                      <List.Icon name=\"user\" />\r\n                      <List.Content>\r\n                        <b>Name: {accountState.user.name} </b>\r\n                      </List.Content>\r\n                    </List.Item>\r\n                    <List.Item>\r\n                      <List.Icon name=\"mail\" />\r\n                      <List.Content>\r\n                        <b>Email: {accountState.user.email} </b>\r\n                      </List.Content>\r\n                    </List.Item>\r\n                    <List.Item>\r\n                      <List.Icon name=\"lock\" />\r\n                      <List.Content>\r\n                        <b>Password: </b>{\" \"}\r\n                        &#9642;&#9642;&#9642;&#9642;&#9642;&#9642;{\" \"}\r\n                      </List.Content>\r\n                    </List.Item>\r\n                  </List>\r\n                  <div className=\"accountButtons\">\r\n                    <Button\r\n                      icon\r\n                      labelPosition=\"left\"\r\n                      color=\"orange\"\r\n                      onClick={updateHandler}\r\n                    >\r\n                      <Icon name=\"pencil\" />\r\n                      Update Your Details\r\n                    </Button>\r\n                    <br />\r\n                    <br />\r\n                    <Button\r\n                      icon\r\n                      labelPosition=\"left\"\r\n                      color=\"red\"\r\n                      onClick={open}\r\n                    >\r\n                      Delete Your Account\r\n                      <Icon name=\"trash\" />\r\n                    </Button>\r\n                    <Confirm\r\n                      open={confirmState.open}\r\n                      onCancel={close}\r\n                      onConfirm={deleteHandler}\r\n                      header=\"Are you sure?\"\r\n                      content=\"Deleting your account is a permanent action and cannot be undone\"\r\n                      cancelButton=\"Take me back\"\r\n                      confirmButton=\"Yes, delete my account permanently\"\r\n                    />\r\n                  </div>\r\n                </Grid.Column>\r\n                <Grid.Column width={8} textAlign=\"center\">\r\n                  <Image\r\n                    src=\"https://img.jamieoliver.com/jamieoliver/recipe-database/oldImages/large/1474_2_1430128688.jpg?tr=w-800,h-1066\"\r\n                    rounded\r\n                    size=\"large\"\r\n                  />\r\n                </Grid.Column>\r\n              </Grid>\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    );\r\n  } else if (loadingState.loadFailed) {\r\n    account = <p>User can't be found</p>;\r\n  }\r\n\r\n  return <React.Fragment>{account}</React.Fragment>;\r\n};\r\n\r\nexport default YourAccount;\r\n"]},"metadata":{},"sourceType":"module"}