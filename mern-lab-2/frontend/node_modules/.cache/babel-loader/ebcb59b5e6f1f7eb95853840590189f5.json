{"ast":null,"code":"var _jsxFileName = \"/Users/BrienOShane93/Documents/GitHub/react-intro/mern-lab-2/frontend/src/components/Layout/Layout.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport { Route, Switch, useHistory } from \"react-router-dom\";\nimport \"./Layout.css\";\nimport Nav from \"../Nav/Nav\";\nimport PizzaPal from \"../../containers/PizzaPal/PizzaPal\";\nimport YourOrders from \"../../containers/YourOrders/YourOrders\";\nimport PlaceOrder from \"../../containers/PlaceOrder/PlaceOrder\";\nimport OrderSuccess from \"../../containers/PlaceOrder/OrderSuccess/OrderSuccess\";\nimport Authenticate from \"../../containers/Authenticate/Authenticate\";\nimport YourAccount from \"../../containers/YourAccount/YourAccount\";\nimport AccountUpdate from \"../../containers/YourAccount/AccountUpdate/AccountUpdate\";\nimport AuthContext from \"../../context/auth-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet logoutTimer;\n\nconst Layout = props => {\n  _s();\n\n  const [setLoggedInState] = useState({\n    isLoggedIn: false\n  });\n  const [token, setToken] = useState(false);\n  const [userId, setUserId] = useState(false);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem(\"userData\"));\n\n    if (storedData && storedData.token && new Date(storedData.expiration) > new Date()) {\n      login(storedData.userId, storedData.token, new Date(storedData.expiration));\n    }\n  }, [login]);\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n  const login = useCallback((uid, token, expirationDate) => {\n    setToken(token);\n    setUserId(uid);\n    const tokenExpirationDate = expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpirationDate(tokenExpirationDate);\n    localStorage.setItem(\"userData\", JSON.stringify({\n      userId: uid,\n      token: token,\n      expiration: tokenExpirationDate.toISOString()\n    }));\n  }, []);\n  const logout = useCallback(() => {\n    setToken(null);\n    setTokenExpirationDate(null);\n    setUserId(null);\n    localStorage.removeItem(\"userData\");\n    history.push(\"/\");\n  }, []);\n  let routes;\n\n  if (token) {\n    routes = /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        component: PizzaPal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/orders/:uid\",\n        component: YourOrders\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/place-order\",\n        component: PlaceOrder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/order-success\",\n        component: OrderSuccess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/users/:uid\",\n        component: YourAccount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/update-account\",\n        component: AccountUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  } else {\n    routes = /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        component: PizzaPal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/authenticate\",\n        component: Authenticate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn: !!token,\n      token: token,\n      userId: userId,\n      login: login,\n      logout: logout\n    },\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }, this), routes]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Layout, \"O8pDis92IRCgpLRyBWaUCkoTPZk=\");\n\n_c = Layout;\nexport default Layout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"sources":["/Users/BrienOShane93/Documents/GitHub/react-intro/mern-lab-2/frontend/src/components/Layout/Layout.js"],"names":["React","useCallback","useState","Container","Route","Switch","useHistory","Nav","PizzaPal","YourOrders","PlaceOrder","OrderSuccess","Authenticate","YourAccount","AccountUpdate","AuthContext","logoutTimer","Layout","props","setLoggedInState","isLoggedIn","token","setToken","userId","setUserId","tokenExpirationDate","setTokenExpirationDate","useEffect","storedData","JSON","parse","localStorage","getItem","Date","expiration","login","remainingTime","getTime","setTimeout","logout","clearTimeout","uid","expirationDate","setItem","stringify","toISOString","removeItem","history","push","routes"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from \"react\";\r\nimport { Container } from \"semantic-ui-react\";\r\nimport { Route, Switch, useHistory } from \"react-router-dom\";\r\n\r\nimport \"./Layout.css\";\r\n\r\nimport Nav from \"../Nav/Nav\";\r\nimport PizzaPal from \"../../containers/PizzaPal/PizzaPal\";\r\nimport YourOrders from \"../../containers/YourOrders/YourOrders\";\r\nimport PlaceOrder from \"../../containers/PlaceOrder/PlaceOrder\";\r\nimport OrderSuccess from \"../../containers/PlaceOrder/OrderSuccess/OrderSuccess\";\r\nimport Authenticate from \"../../containers/Authenticate/Authenticate\";\r\nimport YourAccount from \"../../containers/YourAccount/YourAccount\";\r\nimport AccountUpdate from \"../../containers/YourAccount/AccountUpdate/AccountUpdate\";\r\nimport AuthContext from \"../../context/auth-context\";\r\n\r\nlet logoutTimer;\r\n\r\nconst Layout = (props) => {\r\n  const [setLoggedInState] = useState({isLoggedIn: false});\r\n  const [token, setToken] = useState(false);\r\n  const [userId, setUserId] = useState(false);\r\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\r\n\r\n  useEffect(() => {\r\n    const storedData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    if ( storedData && storedData.token && new Date(storedData.expiration) > new Date() ) {\r\n      login(storedData.userId, storedData.token, new Date(storedData.expiration));\r\n    }\r\n  }, [login]);\r\n\r\n  useEffect(() => {\r\n    if (token && tokenExpirationDate) {\r\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\r\n      logoutTimer = setTimeout(logout, remainingTime);\r\n    } else {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  }, [token, logout, tokenExpirationDate]);\r\n\r\n  const login = useCallback((uid, token, expirationDate) => {\r\n    setToken(token);\r\n    setUserId(uid);\r\n    const tokenExpirationDate = expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\r\n    setTokenExpirationDate(tokenExpirationDate);\r\n    localStorage.setItem(\r\n      \"userData\",\r\n      JSON.stringify({\r\n        userId: uid,\r\n        token: token,\r\n        expiration: tokenExpirationDate.toISOString(),\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    setTokenExpirationDate(null);\r\n    setUserId(null);\r\n    localStorage.removeItem(\"userData\");\r\n    history.push(\"/\");\r\n  }, []);\r\n\r\n  let routes;\r\n  if (token) {\r\n    routes = (\r\n      <Switch>\r\n        <Route path=\"/\" exact component={PizzaPal} />\r\n        <Route path=\"/orders/:uid\" component={YourOrders} />\r\n        <Route path=\"/place-order\" component={PlaceOrder} />\r\n        <Route path=\"/order-success\" component={OrderSuccess} />\r\n        <Route path=\"/users/:uid\" component={YourAccount} />\r\n        <Route path=\"/update-account\" component={AccountUpdate} />\r\n      </Switch>\r\n    );\r\n  } else {\r\n    routes = (\r\n      <Switch>\r\n        <Route path=\"/\" exact component={PizzaPal} />\r\n        <Route path=\"/authenticate\" component={Authenticate} />\r\n      </Switch>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        isLoggedIn: !!token,\r\n        token: token,\r\n        userId: userId,\r\n        login: login,\r\n        logout: logout,\r\n      }}\r\n    >\r\n    <Container>\r\n      <Nav />\r\n      {routes}\r\n    </Container>\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n"]},"metadata":{},"sourceType":"module"}